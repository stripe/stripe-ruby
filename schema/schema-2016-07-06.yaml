  #
  # Stripe API OpenAPI Specification
  #
  # Please note that this file is very much a work in progress and we make no
  # guarantees of its stability. Use it at your own risk!
  #

---
consumes:
- application/x-www-form-urlencoded
definitions:
  account:
    properties:
      business_name:
        description: The publicly visible name of the business
        example: ''
        type:
        - string
      business_primary_color:
        description: A CSS hex color value representing the primary branding color
          for this account
        example: ''
        type:
        - string
      business_url:
        description: The publicly visible website of the business
        example: ''
        type:
        - string
      charges_enabled:
        description: Whether or not the account can create live charges
        example: false
        type:
        - boolean
      country:
        description: The country of the account
        example: US
        type:
        - string
      debit_negative_balances:
        description: Whether or not Stripe will attempt to reclaim negative account
          balances from this account's bank account.
        example: true
        type:
        - boolean
      decline_charge_on:
        description: Account-level settings to automatically decline certain types
          of charges regardless of the bank's decision.
        example:
          avs_failure: true
          cvc_failure: false
        type:
        - object
      default_currency:
        description: The currency this account has chosen to use as the default
        example: usd
        type:
        - string
      details_submitted:
        description: Whether or not account details have been submitted yet. Standalone
          accounts cannot receive transfers before this is true.
        example: false
        type:
        - boolean
      display_name:
        description: The display name for this account. This is used on the Stripe
          dashboard to help you differentiate between accounts.
        example: ''
        type:
        - string
      email:
        description: The primary user's email address
        example: site@stripe.com
        type:
        - string
      external_accounts:
        description: External accounts (bank accounts and/or cards) currently attached
          to this account.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/accounts/acct_18SXbULguOBlZ9Td/external_accounts"
        type:
        - object
      id:
        description: A unique identifier for the account
        example: acct_18SXbULguOBlZ9Td
        type:
        - string
      legal_entity:
        description: Information regarding the owner of this account, including verification
          status.
        example:
          address:
            city: 
            country: US
            line1: 
            line2: 
            postal_code: 
            state: 
          business_name: 
          business_tax_id_provided: false
          dob:
            day: 
            month: 
            year: 
          first_name: 
          last_name: 
          personal_address:
            city: 
            country: US
            line1: 
            line2: 
            postal_code: 
            state: 
          ssn_last_4_provided: false
          type: 
          verification:
            details: 
            details_code: 
            document: 
            status: unverified
        type:
        - object
      managed:
        description: Whether or not the account is [managed](/docs/connect/managed-accounts)
          by your platform. Returns null if the account was not created by a platform.
        example: false
        type:
        - boolean
      metadata:
        description: ''
        example: {}
        type:
        - object
      object:
        description: ''
        example: account
        type:
        - string
      product_description:
        description: An internal-only description of the product or service provided.
          This is used by Stripe in the event the account gets flagged for potential
          fraud.
        example: ''
        type:
        - string
      statement_descriptor:
        description: The text that will appear on credit card statements
        example: ''
        type:
        - string
      support_email:
        description: A publicly shareable email address that can be reached for support
          for this account
        example: ''
        type:
        - string
      support_phone:
        description: The publicly visible support phone number for the business
        example: ''
        type:
        - string
      support_url:
        description: A publicly shareable URL that can be reached for support for
          this account
        example: ''
        type:
        - string
      timezone:
        description: The timezone used in the Stripe dashboard for this account. A
          list of possible timezone values is maintained at the [IANA Timezone Database](http://www.iana.org/time-zones).
        example: Etc/UTC
        type:
        - string
      tos_acceptance:
        description: Who accepted the Stripe terms of service, and when they accepted
          it.
        example:
          date: 
          ip: 
          user_agent: 
        type:
        - object
      transfer_schedule:
        description: When payments collected will be automatically paid out to the
          account holder's bank account.
        example:
          delay_days: 2
          interval: daily
        type:
        - object
      transfers_enabled:
        description: Whether or not Stripe will send automatic transfers for this
          account. This is only false when Stripe is waiting for additional information
          from the account holder.
        example: false
        type:
        - boolean
      verification:
        description: The state of the account's information requests, including what
          information is needed and by when it must be provided.
        example:
          disabled_reason: fields_needed
          due_by: 
          fields_needed:
          - business_url
          - external_account
          - product_description
          - support_phone
          - tos_acceptance.date
          - tos_acceptance.ip
        type:
        - object
    required:
    - charges_enabled
    - country
    - debit_negative_balances
    - decline_charge_on
    - default_currency
    - details_submitted
    - external_accounts
    - id
    - legal_entity
    - managed
    - object
    - tos_acceptance
    - transfer_schedule
    - transfers_enabled
    - verification
    type:
    - object
    title: Account
  account-with-keys:
    properties:
      business_name:
        description: The publicly visible name of the business
        example: ''
        type:
        - string
      business_primary_color:
        description: A CSS hex color value representing the primary branding color
          for this account
        example: ''
        type:
        - string
      business_url:
        description: The publicly visible website of the business
        example: ''
        type:
        - string
      charges_enabled:
        description: Whether or not the account can create live charges
        example: false
        type:
        - boolean
      country:
        description: The country of the account
        example: US
        type:
        - string
      debit_negative_balances:
        description: Whether or not Stripe will attempt to reclaim negative account
          balances from this account's bank account.
        example: true
        type:
        - boolean
      decline_charge_on:
        description: Account-level settings to automatically decline certain types
          of charges regardless of the bank's decision.
        example:
          avs_failure: true
          cvc_failure: false
        type:
        - object
      default_currency:
        description: The currency this account has chosen to use as the default
        example: usd
        type:
        - string
      details_submitted:
        description: Whether or not account details have been submitted yet. Standalone
          accounts cannot receive transfers before this is true.
        example: false
        type:
        - boolean
      display_name:
        description: The display name for this account. This is used on the Stripe
          dashboard to help you differentiate between accounts.
        example: ''
        type:
        - string
      email:
        description: The primary user's email address
        example: site@stripe.com
        type:
        - string
      external_accounts:
        description: External accounts (bank accounts and/or cards) currently attached
          to this account.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/accounts/acct_18SXbULguOBlZ9Td/external_accounts"
        type:
        - object
      id:
        description: A unique identifier for the account
        example: acct_18SXbULguOBlZ9Td
        type:
        - string
      keys:
        description: ''
        example: {}
        type:
        - object
      legal_entity:
        description: Information regarding the owner of this account, including verification
          status.
        example:
          address:
            city: 
            country: US
            line1: 
            line2: 
            postal_code: 
            state: 
          business_name: 
          business_tax_id_provided: false
          dob:
            day: 
            month: 
            year: 
          first_name: 
          last_name: 
          personal_address:
            city: 
            country: US
            line1: 
            line2: 
            postal_code: 
            state: 
          ssn_last_4_provided: false
          type: 
          verification:
            details: 
            details_code: 
            document: 
            status: unverified
        type:
        - object
      managed:
        description: Whether or not the account is [managed](/docs/connect/managed-accounts)
          by your platform. Returns null if the account was not created by a platform.
        example: false
        type:
        - boolean
      metadata:
        description: ''
        example: {}
        type:
        - object
      object:
        description: ''
        example: account
        type:
        - string
      product_description:
        description: An internal-only description of the product or service provided.
          This is used by Stripe in the event the account gets flagged for potential
          fraud.
        example: ''
        type:
        - string
      statement_descriptor:
        description: The text that will appear on credit card statements
        example: ''
        type:
        - string
      support_email:
        description: A publicly shareable email address that can be reached for support
          for this account
        example: ''
        type:
        - string
      support_phone:
        description: The publicly visible support phone number for the business
        example: ''
        type:
        - string
      support_url:
        description: A publicly shareable URL that can be reached for support for
          this account
        example: ''
        type:
        - string
      timezone:
        description: The timezone used in the Stripe dashboard for this account. A
          list of possible timezone values is maintained at the [IANA Timezone Database](http://www.iana.org/time-zones).
        example: Etc/UTC
        type:
        - string
      tos_acceptance:
        description: Who accepted the Stripe terms of service, and when they accepted
          it.
        example:
          date: 
          ip: 
          user_agent: 
        type:
        - object
      transfer_schedule:
        description: When payments collected will be automatically paid out to the
          account holder's bank account.
        example:
          delay_days: 2
          interval: daily
        type:
        - object
      transfers_enabled:
        description: Whether or not Stripe will send automatic transfers for this
          account. This is only false when Stripe is waiting for additional information
          from the account holder.
        example: false
        type:
        - boolean
      verification:
        description: The state of the account's information requests, including what
          information is needed and by when it must be provided.
        example:
          disabled_reason: fields_needed
          due_by: 
          fields_needed:
          - business_url
          - external_account
          - product_description
          - support_phone
          - tos_acceptance.date
          - tos_acceptance.ip
        type:
        - object
    required:
    - charges_enabled
    - country
    - debit_negative_balances
    - decline_charge_on
    - default_currency
    - details_submitted
    - external_accounts
    - id
    - keys
    - legal_entity
    - managed
    - object
    - tos_acceptance
    - transfer_schedule
    - transfers_enabled
    - verification
    type:
    - object
    title: AccountWithKeys
  alipay-account:
    properties:
      created:
        description: ''
        example: 1476487303
        type:
        - integer
      customer:
        description: ''
        example: ''
        type:
        - string
      fingerprint:
        description: Uniquely identifies the account and will be the same across all
          Alipay account objects that are linked to the same Alipay account.
        example: iLTUhRcDyltJSzpt
        type:
        - string
      id:
        description: ''
        example: aliacc_194ezjLguOBlZ9TdTAria6Xj
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a customer object.
          It can be useful for storing additional information about the customer in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: alipay_account
        type:
        - string
      payment_amount:
        description: If the Alipay account object is not reusable, the exact amount
          that you can create a charge for.
        example: 1000
        type:
        - integer
      payment_currency:
        description: If the Alipay account object is not reusable, the exact currency
          that you can create a charge for.
        example: usd
        type:
        - string
      reusable:
        description: True if you can create multiple payments using this account.
          If the account is reusable, then you can freely choose the amount of each
          payment.
        example: false
        type:
        - boolean
      used:
        description: Whether this Alipay account object has ever been used for a payment.
        example: false
        type:
        - boolean
      username:
        description: The username for the Alipay account.
        example: test@example.com
        type:
        - string
    required:
    - created
    - fingerprint
    - id
    - livemode
    - metadata
    - object
    - reusable
    - used
    - username
    type:
    - object
    title: AlipayAccount
  apple-pay-domain:
    properties:
      created:
        description: ''
        example: 1476487303
        type:
        - integer
      domain_name:
        description: ''
        example: example.com
        type:
        - string
      id:
        description: ''
        example: apwc_194ezjLguOBlZ9Td70ztfzna
        type:
        - string
      livemode:
        description: ''
        example: true
        type:
        - boolean
      object:
        description: ''
        example: apple_pay_domain
        type:
        - string
    required:
    - created
    - domain_name
    - id
    - livemode
    - object
    type:
    - object
    title: ApplePayDomain
  apple-pay-session:
    properties:
      object:
        description: ''
        example: ''
        type:
        - string
      session:
        description: ''
        example: ''
        type:
        - string
    required:
    - object
    - session
    type:
    - object
    title: ApplePaySession
  balance:
    properties:
      available:
        description: Funds that are available to be paid out automatically by Stripe
          or explicitly via the <a href='#transfers'>transfers API</a>. The available
          balance for each currency and payment type can be found in the `source_types`
          property.
        example:
        - currency: usd
          amount: 0
          source_types:
            card: 0
        type:
        - array
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: balance
        type:
        - string
      pending:
        description: Funds that are not available in the balance yet, due to the 7-day
          rolling pay cycle. The pending balance for each currency and payment type
          can be found in the `source_types` property
        example:
        - currency: usd
          amount: 0
          source_types:
            card: 0
        type:
        - array
    required:
    - available
    - livemode
    - object
    - pending
    type:
    - object
    title: Balance
  balance-transaction:
    properties:
      amount:
        description: Gross amount of the transaction, in %s.
        example: 100
        type:
        - integer
      available_on:
        description: The date the transaction's net funds will become available in
          the Stripe balance.
        example: 1476487303
        type:
        - integer
      created:
        description: ''
        example: 1476487303
        type:
        - integer
      currency:
        description: ''
        example: usd
        type:
        - string
      description:
        description: ''
        example: ''
        type:
        - string
      fee:
        description: Fees (in %s) paid for this transaction
        example: 0
        type:
        - integer
      fee_details:
        description: Detailed breakdown of fees (in %s) paid for this transaction
        example: []
        type:
        - array
      id:
        description: ''
        example: txn_194ezjLguOBlZ9TdZ8zi2Nkq
        type:
        - string
      net:
        description: Net amount of the transaction, in %s.
        example: 100
        type:
        - integer
      object:
        description: ''
        example: balance_transaction
        type:
        - string
      source:
        description: The Stripe object this transaction is related to.
        example: ch_194ezjLguOBlZ9TdqGsCYBqH
        type:
        - string
      sourced_transfers:
        description: The transfers (if any) for which `source` is a `source_transaction`.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/transfers?source_transaction=ch_194ezjLguOBlZ9TdqGsCYBqH"
        type:
        - object
      status:
        description: If the transaction's net funds are available in the Stripe balance
          yet. Either `available` or `pending`.
        example: pending
        type:
        - string
      type:
        description: 'Transaction type: `adjustment`, `application_fee`, `application_fee_refund`,
          `charge`, `payment`, `payment_refund`, `refund`,  `transfer`, `transfer_cancel`,
          `transfer_failure`, or `transfer_refund`.'
        example: charge
        type:
        - string
    required:
    - amount
    - available_on
    - created
    - currency
    - fee
    - fee_details
    - id
    - net
    - object
    - status
    - type
    type:
    - object
    title: BalanceTransaction
  bitcoin-receiver:
    properties:
      active:
        description: True when this bitcoin receiver has received a non-zero amount
          of bitcoin.
        example: false
        type:
        - boolean
      amount:
        description: The amount of `currency` that you are collecting as payment.
        example: 100
        type:
        - integer
      amount_received:
        description: The amount of `currency` to which `bitcoin_amount_received` has
          been converted.
        example: 0
        type:
        - integer
      bitcoin_amount:
        description: 'The amount of bitcoin that the customer should send to fill
          the receiver. The `bitcoin_amount` is denominated in Satoshi: there are
          10^8 Satoshi in one bitcoin.'
        example: 1757908
        type:
        - integer
      bitcoin_amount_received:
        description: The amount of bitcoin that has been sent by the customer to this
          receiver.
        example: 0
        type:
        - integer
      bitcoin_uri:
        description: This URI can be displayed to the customer as a clickable link
          (to activate their bitcoin client) or as a QR code (for mobile wallets).
        example: bitcoin:test_7i9Fo4b5wXcUAuoVBFrc7nc9HDxD1?amount=0.01757908
        type:
        - string
      created:
        description: ''
        example: 1467402462
        type:
        - integer
      currency:
        description: Three-letter ISO currency code representing the currency to which
          the bitcoin will be converted.
        example: usd
        type:
        - string
      customer:
        description: ''
        example: ''
        type:
        - string
      description:
        description: ''
        example: Receiver for John Doe
        type:
        - string
      email:
        description: The customer's email address, set by the API call that creates
          the receiver.
        example: test@example.com
        type:
        - string
      filled:
        description: This flag is initially false and updates to true when the customer
          sends the `bitcoin_amount` to this receiver.
        example: false
        type:
        - boolean
      id:
        description: ''
        example: btcrcv_18SXc2LguOBlZ9TdR8UvyPtD
        type:
        - string
      inbound_address:
        description: A bitcoin address that is specific to this receiver. The customer
          can send bitcoin to this address to fill the receiver.
        example: test_7i9Fo4b5wXcUAuoVBFrc7nc9HDxD1
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a customer object.
          It can be useful for storing additional information about the customer in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: bitcoin_receiver
        type:
        - string
      payment:
        description: The ID of the payment created from the receiver, if any. Hidden
          when viewing the receiver with a publishable key.
        example: ''
        type:
        - string
      refund_address:
        description: The refund address for these bitcoin, if communicated by the
          customer.
        example: ''
        type:
        - string
      transactions:
        description: A list with one entry for each time that the customer sent bitcoin
          to the receiver.  Hidden when viewing the receiver with a publishable key.
        example: []
        type:
        - array
      uncaptured_funds:
        description: This receiver contains uncaptured funds that can be used for
          a payment or refunded.
        example: false
        type:
        - boolean
      used_for_payment:
        description: ''
        example: false
        type:
        - boolean
    required:
    - active
    - amount
    - amount_received
    - bitcoin_amount
    - bitcoin_amount_received
    - bitcoin_uri
    - created
    - currency
    - filled
    - id
    - inbound_address
    - livemode
    - metadata
    - object
    - transactions
    - uncaptured_funds
    type:
    - object
    title: BitcoinReceiver
  bitcoin-transaction:
    properties:
      amount:
        description: The amount of `currency` that the transaction was converted to
          in real-time.
        example: 0
        type:
        - integer
      bitcoin_amount:
        description: The amount of bitcoin contained in the transaction.
        example: 0
        type:
        - integer
      created:
        description: ''
        example: 0
        type:
        - integer
      currency:
        description: The currency to which this transaction was converted.
        example: ''
        type:
        - string
      id:
        description: ''
        example: ''
        type:
        - string
      object:
        description: ''
        example: ''
        type:
        - string
      receiver:
        description: The receiver to which this transaction was sent.
        example: ''
        type:
        - string
    required:
    - amount
    - bitcoin_amount
    - created
    - currency
    - id
    - object
    - receiver
    type:
    - object
    title: BitcoinTransaction
  charge:
    properties:
      amount:
        description: A positive integer in the <a href="https://support.stripe.com/questions/which-zero-decimal-currencies-does-stripe-support">smallest
          currency unit</a> (e.g., 100 cents to charge $1.00 or 100 to charge ¥100,
          a 0-decimal currency) representing how much to charge. The minimum amount
          is $0.50 US or <a href="https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe">equivalent
          in charge currency</a>.
        example: 100
        type:
        - integer
      amount_refunded:
        description: Amount in %s refunded (can be less than the amount attribute
          on the charge if a partial refund was issued).
        example: 0
        type:
        - integer
      application_fee:
        description: The application fee (if any) for the charge. [See the Connect
          documentation](/docs/connect/payments-fees#collecting-fees) for details.
        example: ''
        type:
        - string
      balance_transaction:
        description: ID of the balance transaction that describes the impact of this
          charge on your account balance (not including refunds or disputes).
        example: txn_194ezjLguOBlZ9TdZ8zi2Nkq
        type:
        - string
      captured:
        description: If the charge was created without capturing, this boolean represents
          whether or not it is still uncaptured or has since been captured.
        example: true
        type:
        - boolean
      created:
        description: ''
        example: 1476487303
        type:
        - integer
      currency:
        description: Three-letter ISO currency code representing the currency in which
          the charge was made.
        example: usd
        type:
        - string
      customer:
        description: ID of the customer this charge is for if one exists.
        example: ''
        type:
        - string
      description:
        description: ''
        example: My First Test Charge (created for API docs)
        type:
        - string
      destination:
        description: The account (if any) the charge was made on behalf of. [See the
          Connect documentation](/docs/connect/payments-fees#charging-through-the-platform)
          for details.
        example: ''
        type:
        - string
      dispute:
        description: Details about the dispute if the charge has been disputed.
        example: {}
        type:
        - object
      failure_code:
        description: Error code explaining reason for charge failure if available
          (see [the errors section](/docs/api#errors) for a list of codes).
        example: ''
        type:
        - string
      failure_message:
        description: Message to user further explaining reason for charge failure
          if available.
        example: ''
        type:
        - string
      fraud_details:
        description: Hash with information on fraud assessments for the charge.      Assessments
          reported by you have the key `user_report` and, if set, possible values
          of      `safe` and `fraudulent`. Assessments from Stripe have the key `stripe_report`
          and,      if set, the value `fraudulent`.
        example: {}
        type:
        - object
      id:
        description: ''
        example: ch_194ezjLguOBlZ9TdqGsCYBqH
        type:
        - string
      invoice:
        description: ID of the invoice this charge is for if one exists.
        example: ''
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a charge      object.
          It can be useful for storing additional information about the charge      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: charge
        type:
        - string
      order:
        description: ID of the order this charge is for if one exists.
        example: ''
        type:
        - string
      paid:
        description: "`true` if the charge succeeded, or was successfully authorized
          for later capture."
        example: true
        type:
        - boolean
      receipt_email:
        description: This is the email address that the receipt for this charge was
          sent to.
        example: ''
        type:
        - string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this charge.
        example: ''
        type:
        - string
      refunded:
        description: Whether or not the charge has been fully refunded.  If the charge
          is only partially refunded, this attribute will still be false.
        example: false
        type:
        - boolean
      refunds:
        description: A list of refunds that have been applied to the charge.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/charges/ch_194ezjLguOBlZ9TdqGsCYBqH/refunds"
        type:
        - object
      shipping:
        description: Shipping information for the charge.
        example: {}
        type:
        - object
      source_transfer:
        description: The transfer ID which created this charge. Only present if the
          charge came from another Stripe account. [See the Connect documentation](/docs/connect/payments-fees#charging-through-the-platform)
          for details.
        example: ''
        type:
        - string
      statement_descriptor:
        description: Extra information about a charge. This will appear on your customer's
          credit card statement.
        example: ''
        type:
        - string
      status:
        description: The status of the payment is either `succeeded`, `pending`, or
          `failed`.
        example: succeeded
        type:
        - string
      transfer:
        description: ID of the transfer to the `destination` account (only applicable
          if the charge was created using the `destination` parameter).
        example: ''
        type:
        - string
    required:
    - amount
    - amount_refunded
    - captured
    - created
    - currency
    - id
    - livemode
    - metadata
    - object
    - paid
    - refunded
    - refunds
    - status
    type:
    - object
    title: Charge
  country-spec:
    properties:
      default_currency:
        description: The default currency for this country. This applies to both payment
          methods and bank accounts.
        example: usd
        type:
        - string
      id:
        description: The ISO Country code for this country.
        example: US
        type:
        - string
      object:
        description: ''
        example: country_spec
        type:
        - string
      supported_bank_account_currencies:
        description: Currencies that can be accepted in the specific country (for
          transfers).
        example:
          usd:
          - US
        type:
        - object
      supported_payment_currencies:
        description: Currencies that can be accepted in the specified country (for
          payments).
        example:
        - usd
        - aed
        - afn
        - "..."
        type:
        - array
      supported_payment_methods:
        description: Payment methods available in the specified country. You will
          need to <a target="_blank" href="https://dashboard.stripe.com/account/bitcoin/enable">enable
          bitcoin</a> and <a target="_blank" href="https://stripe.com/docs/guides/ach">ACH</a>
          payments on your account for those methods to appear in this list. The <code>stripe</code>
          payment method refers to <a target="_blank" href="https://stripe.com/docs/connect/payments-fees#charging-through-the-platform">charging
          through your platform</a>.
        example:
        - alipay
        - card
        - stripe
        type:
        - array
      verification_fields:
        description: Lists the types of verification data needed to keep an account
          open. Includes 'minimum' fields, which every account must eventually provide,
          as well as a 'additional' fields, which are only required for some merchants.
        example:
          individual:
            minimum:
            - external_account
            - legal_entity.address.city
            - legal_entity.address.line1
            - legal_entity.address.postal_code
            - legal_entity.address.state
            - legal_entity.dob.day
            - legal_entity.dob.month
            - legal_entity.dob.year
            - legal_entity.first_name
            - legal_entity.last_name
            - legal_entity.ssn_last_4
            - legal_entity.type
            - tos_acceptance.date
            - tos_acceptance.ip
            additional:
            - legal_entity.verification.document
          company:
            minimum:
            - external_account
            - legal_entity.address.city
            - legal_entity.address.line1
            - legal_entity.address.postal_code
            - legal_entity.address.state
            - legal_entity.business_name
            - legal_entity.business_tax_id
            - legal_entity.dob.day
            - legal_entity.dob.month
            - legal_entity.dob.year
            - legal_entity.first_name
            - legal_entity.last_name
            - legal_entity.ssn_last_4
            - legal_entity.type
            - tos_acceptance.date
            - tos_acceptance.ip
            additional:
            - legal_entity.verification.document
        type:
        - object
    required:
    - default_currency
    - id
    - object
    - supported_bank_account_currencies
    - supported_payment_currencies
    - supported_payment_methods
    - verification_fields
    type:
    - object
    title: CountrySpec
  coupon:
    properties:
      amount_off:
        description: 'Amount (in the `currency` specified) that will be taken off
          the subtotal of any invoices for this customer.  '
        example: 0
        type:
        - integer
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: If `amount_off` has been set, the currency of the amount to take
          off.
        example: usd
        type:
        - string
      duration:
        description: One of `forever`, `once`, and `repeating`.  Describes how long
          a customer who applies this coupon will get the discount.
        example: repeating
        type:
        - string
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon
          applies.  Null if coupon `duration` is `forever` or `once`.
        example: 3
        type:
        - integer
      id:
        description: ''
        example: 25OFF
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total,
          before it is no longer valid.
        example: 0
        type:
        - integer
      metadata:
        description: A set of key/value pairs that you can attach to a coupon      object.
          It can be useful for storing additional information about the coupon      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: coupon
        type:
        - string
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for
          this customer for the duration of the coupon.  For example, a coupon with
          percent_off of 50 will make a %s100 invoice %s50 instead.
        example: 25
        type:
        - integer
      redeem_by:
        description: Date after which the coupon can no longer be redeemed
        example: 0
        type:
        - integer
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        example: 0
        type:
        - integer
      valid:
        description: Taking account of the above properties, whether this coupon can
          still be applied to a customer
        example: true
        type:
        - boolean
    required:
    - created
    - duration
    - id
    - livemode
    - metadata
    - object
    - times_redeemed
    - valid
    type:
    - object
    title: Coupon
  customer:
    properties:
      account_balance:
        description: Current balance, if any, being stored on the customer's account.  If
          negative, the customer has credit to apply to the next invoice.  If positive,
          the customer has an amount owed that will be added to the next invoice.  The
          balance does not refer to any unpaid invoices; it solely takes into account
          amounts that have yet to be successfully applied to any invoice. This balance
          is only taken into account for recurring billing purposes (i.e., subscriptions,
          invoices, invoice items).
        example: 0
        type:
        - integer
      business_vat_id:
        description: The customer's VAT identification number.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1467402464
        type:
        - integer
      currency:
        description: The currency the customer can be charged in for recurring billing
          purposes.
        example: usd
        type:
        - string
      default_source:
        description: ID of the default source attached to this customer.
        example: ''
        type:
        - string
      delinquent:
        description: Whether or not the latest charge for the customer's latest invoice
          has failed
        example: false
        type:
        - boolean
      description:
        description: ''
        example: ''
        type:
        - string
      discount:
        description: Describes the current discount active on the customer, if there
          is one.
        example: {}
        type:
        - object
      email:
        description: ''
        example: ''
        type:
        - string
      id:
        description: ''
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a customer      object.
          It can be useful for storing additional information about the customer      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: customer
        type:
        - string
      shipping:
        description: Shipping information associated with the customer.
        example: {}
        type:
        - object
      sources:
        description: The customer's payment sources, if any
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/customers/cus_8k1f9EnJjAIc1U/sources"
        type:
        - object
      subscriptions:
        description: The customer's current subscriptions, if any
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/customers/cus_8k1f9EnJjAIc1U/subscriptions"
        type:
        - object
    required:
    - account_balance
    - created
    - id
    - livemode
    - metadata
    - object
    - sources
    - subscriptions
    type:
    - object
    title: Customer
  customer-source:
    properties:
      id:
        description: ''
        example: ba_194ezkLguOBlZ9TdkAnGXE0u
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to a bank account
          object. It can be useful for storing additional information about the bank
          account in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: bank_account
        type:
        - string
    required:
    - id
    - metadata
    - object
    type:
    - object
    title: Polymorphic
  discount:
    properties:
      coupon:
        description: Hash describing the coupon applied to create this discount.
        example:
          id: 25OFF
          object: coupon
          amount_off: 
          created: 1476487304
          currency: usd
          duration: repeating
          duration_in_months: 3
          livemode: false
          max_redemptions: 
          metadata: {}
          percent_off: 25
          redeem_by: 
          times_redeemed: 0
          valid: true
        type:
        - object
      customer:
        description: ''
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      end:
        description: If the coupon has a duration of `once` or `repeating`, the date
          that this discount will end. If the coupon used has a `forever` duration,
          this attribute will be null.
        example: 1484436104
        type:
        - integer
      object:
        description: ''
        example: discount
        type:
        - string
      start:
        description: Date that the coupon was applied.
        example: 1476487304
        type:
        - integer
      subscription:
        description: The subscription that this coupon is applied to, if it is applied
          to a particular subscription.
        example: ''
        type:
        - string
    required:
    - coupon
    - object
    - start
    type:
    - object
    title: Discount
  dispute:
    properties:
      amount:
        description: Disputed amount.  Usually the amount of the charge, but can differ
          (usually because of currency fluctuation or because only part of the order
          is disputed).
        example: 1000
        type:
        - integer
      balance_transactions:
        description: List of zero, one, or two balance transactions that show funds
          withdrawn and reinstated to your Stripe account as a result of this dispute.
        example: []
        type:
        - array
      charge:
        description: ID of the charge that was disputed
        example: ch_194ezjLguOBlZ9TdqGsCYBqH
        type:
        - string
      created:
        description: Date dispute was opened
        example: 1476487304
        type:
        - integer
      currency:
        description: Three-letter ISO currency code representing the currency of the
          amount that was disputed.
        example: usd
        type:
        - string
      evidence:
        description: Evidence provided to respond to a dispute. Updating any field
          in the hash will submit all fields in the hash for review.
        example:
          access_activity_log: 
          billing_address: 
          cancellation_policy: 
          cancellation_policy_disclosure: 
          cancellation_rebuttal: 
          customer_communication: 
          customer_email_address: 
          customer_name: 
          customer_purchase_ip: 
          customer_signature: 
          duplicate_charge_documentation: 
          duplicate_charge_explanation: 
          duplicate_charge_id: 
          product_description: 
          receipt: 
          refund_policy: 
          refund_policy_disclosure: 
          refund_refusal_explanation: 
          service_date: 
          service_documentation: 
          shipping_address: 
          shipping_carrier: 
          shipping_date: 
          shipping_documentation: 
          shipping_tracking_number: 
          uncategorized_file: 
          uncategorized_text: 
        type:
        - object
      evidence_details:
        description: Information about the evidence submission.
        example:
          due_by: 1478131199
          has_evidence: false
          past_due: false
          submission_count: 0
        type:
        - object
      id:
        description: ''
        example: dp_194ezkLguOBlZ9TdFedMtZcG
        type:
        - string
      is_charge_refundable:
        description: If true, it is still possible to refund the disputed payment.
          Once the payment has been fully refunded, no further funds will be withdrawn
          from your Stripe account as a result of this dispute.
        example: false
        type:
        - boolean
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a dispute      object.
          It can be useful for storing additional information about the dispute      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: dispute
        type:
        - string
      reason:
        description: Reason given by cardholder for dispute.  Possible values are
          `duplicate`, `fraudulent`, `subscription_canceled`, `product_unacceptable`,
          `product_not_received`, `unrecognized`, `credit_not_processed`, `general`,
          `goods_services_returned_or_refused`, `goods_services_cancelled`, `incorrect_account_details`,
          `insufficient_funds`, `bank_cannot_process`, `debit_not_authorized`.  Read
          more about [dispute reasons](https://stripe.com/help/disputes#reasons).
        example: general
        type:
        - string
      status:
        description: Current status of dispute.  Possible values are `warning_needs_response`,
          `warning_under_review`, `warning_closed`, `needs_response`, `response_disabled`,
          `under_review`, `charge_refunded`, `won`, `lost`.
        example: needs_response
        type:
        - string
    required:
    - amount
    - balance_transactions
    - charge
    - created
    - currency
    - evidence
    - evidence_details
    - id
    - is_charge_refundable
    - livemode
    - metadata
    - object
    - reason
    - status
    type:
    - object
    title: Dispute
  event:
    properties:
      api_version:
        description: 'The Stripe API version used to render `data`. *Note: this property
          is populated for events on or after October 31, 2014.*'
        example: '2016-06-15'
        type:
        - string
      created:
        description: ''
        example: 1467402464
        type:
        - integer
      data:
        description: Hash containing data associated with the event.
        example:
          object:
            id: cus_8k1f9EnJjAIc1U
            object: customer
            account_balance: 0
            created: 1467402464
            currency: usd
            default_source: 
            delinquent: false
            description: 
            discount: 
            email: 
            livemode: false
            metadata: {}
            shipping: 
            sources:
              object: list
              data: []
              has_more: false
              total_count: 0
              url: "/v1/customers/cus_8k1f9EnJjAIc1U/sources"
            subscriptions:
              object: list
              data: []
              has_more: false
              total_count: 0
              url: "/v1/customers/cus_8k1f9EnJjAIc1U/subscriptions"
        type:
        - object
      id:
        description: ''
        example: evt_18SXc4LguOBlZ9TdTg3HFO9b
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: event
        type:
        - string
      pending_webhooks:
        description: Number of webhooks yet to be delivered successfully (return a
          20x response) to the URLs you've specified.
        example: 0
        type:
        - integer
      request:
        description: 'ID of the API request that caused the event. If null, the event
          was automatic (e.g. Stripe''sautomatic subscription handling). Request logs
          are available in the [dashboard](https://dashboard.stripe.com/logs)but currently
          not in the API. *Note: this property is populated for events on or after
          April 23, 2013.*'
        example: ''
        type:
        - string
      type:
        description: 'Description of the event: e.g. `invoice.created`, `charge.refunded`,
          etc.'
        example: customer.created
        type:
        - string
    required:
    - created
    - data
    - id
    - livemode
    - object
    - pending_webhooks
    - type
    type:
    - object
    title: Event
  external-account-source:
    properties:
      account:
        description: ''
        example: acct_18SXbULguOBlZ9Td
        type:
        - string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        example: US
        type:
        - string
      currency:
        description: Three-letter ISO currency code representing the currency paid
          out to the bank account.
        example: usd
        type:
        - string
      default_for_currency:
        description: Whether this bank account is the default bank account for its
          currency.
        example: false
        type:
        - boolean
      fingerprint:
        description: Uniquely identifies this particular bank account.  You can use
          this attribute to check whether two bank accounts are the same.
        example: PciLc7uAqm43dtd7
        type:
        - string
      id:
        description: ''
        example: ba_194ezkLguOBlZ9TdkAnGXE0u
        type:
        - string
      last4:
        description: ''
        example: '6789'
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to a bank account
          object. It can be useful for storing additional information about the bank
          account in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: bank_account
        type:
        - string
    required:
    - account
    - country
    - currency
    - default_for_currency
    - id
    - last4
    - metadata
    - object
    type:
    - object
    title: Polymorphic
  fee-refund:
    properties:
      amount:
        description: Amount, in %s.
        example: 100
        type:
        - integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: Three-letter ISO code representing the currency.
        example: usd
        type:
        - string
      fee:
        description: ID of the application fee that was refunded.
        example: fee_9NPpLM1NGb3Bu0
        type:
        - string
      id:
        description: ''
        example: fr_9NPpnkQOQg0gLK
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to the object. It
          can be useful for storing additional information in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: fee_refund
        type:
        - string
    required:
    - amount
    - created
    - currency
    - fee
    - id
    - metadata
    - object
    type:
    - object
    title: FeeRefund
  invoice:
    properties:
      amount_due:
        description: Final amount due at this time for this invoice.  If the invoice's
          total is smaller than the minimum charge amount, for example, or if there
          is account credit that can be applied to the invoice, the `amount_due` may
          be 0.  If there is a positive `starting_balance` for the invoice (the customer
          owes money), the amount_due will also take that into account.  The charge
          that gets generated for the invoice will be for the amount specified in
          `amount_due`.
        example: 0
        type:
        - integer
      application_fee:
        description: The fee in %s that will be applied to the invoice and transferred
          to the application owner's Stripe account when the invoice is paid.
        example: 0
        type:
        - integer
      attempt_count:
        description: Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule.  Any payment attempt counts as the first
          attempt, and subsequently only automatic retries increment the attempt count.  In
          other words, manual payment attempts after the first attempt do not affect
          the retry schedule.
        example: 0
        type:
        - integer
      attempted:
        description: Whether or not an attempt has been made to pay the invoice. An
          invoice is not attempted until 1 hour after the `invoice.created` webhook,
          for example, so you might not want to display that invoice as unpaid to
          your users.
        example: false
        type:
        - boolean
      charge:
        description: ID of the latest charge generated for this invoice, if any.
        example: ''
        type:
        - string
      closed:
        description: Whether or not the invoice is still trying to collect payment.
          An invoice is closed if it's either paid or it has been marked closed.  A
          closed invoice will no longer attempt to collect payment.
        example: false
        type:
        - boolean
      currency:
        description: ''
        example: usd
        type:
        - string
      customer:
        description: ''
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      date:
        description: ''
        example: 1476487304
        type:
        - integer
      description:
        description: ''
        example: ''
        type:
        - string
      discount:
        description: ''
        example: {}
        type:
        - object
      ending_balance:
        description: Ending customer balance after attempting to pay invoice.  If
          the invoice has not been attempted yet, this will be null.
        example: 0
        type:
        - integer
      forgiven:
        description: Whether or not the invoice has been forgiven.  Forgiving an invoice
          instructs us to update the subscription status as if the invoice were successfully
          paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened
        example: false
        type:
        - boolean
      id:
        description: ''
        example: in_194ezkLguOBlZ9TdyttsQ22D
        type:
        - string
      lines:
        description: 'The individual line items that make up the invoice. `lines`
          is sorted as follows: invoice items in reverse chronological order, followed
          by the subscription, if any.'
        example:
          data:
          - id: sub_9NPprbcAjRJKdQ
            object: line_item
            amount: 2000
            currency: usd
            description: 
            discountable: true
            livemode: true
            metadata: {}
            period:
              start: 1479165704
              end: 1481757704
            plan:
              id: gold
              object: plan
              amount: 2000
              created: 1467402464
              currency: usd
              interval: month
              interval_count: 1
              livemode: false
              metadata: {}
              name: Gold Special
              statement_descriptor: 
              trial_period_days: 
            proration: false
            quantity: 1
            subscription: 
            type: subscription
          total_count: 1
          object: list
          url: "/v1/invoices/in_194ezkLguOBlZ9TdyttsQ22D/lines"
        type:
        - object
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to an invoice object.
          It can be useful for storing additional information about the invoice in
          a structured format.
        example: {}
        type:
        - object
      next_payment_attempt:
        description: The time at which payment will next be attempted.
        example: 1476490904
        type:
        - integer
      object:
        description: ''
        example: invoice
        type:
        - string
      paid:
        description: Whether or not payment was successfully collected for this invoice.  An
          invoice can be paid (most commonly) with a charge or with credit from the
          customer's account balance.
        example: false
        type:
        - boolean
      period_end:
        description: End of the usage period during which invoice items were added
          to this invoice
        example: 1476487304
        type:
        - integer
      period_start:
        description: Start of the usage period during which invoice items were added
          to this invoice
        example: 1476487304
        type:
        - integer
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this invoice.
        example: ''
        type:
        - string
      starting_balance:
        description: Starting customer balance before attempting to pay invoice.  If
          the invoice has not been attempted yet, this will be the current customer
          balance.
        example: 0
        type:
        - integer
      statement_descriptor:
        description: Extra information about an invoice for the customer's credit
          card statement.
        example: ''
        type:
        - string
      subscription:
        description: The subscription that this invoice was prepared for, if any.
        example: ''
        type:
        - string
      subscription_proration_date:
        description: Only set for upcoming invoices that preview prorations. The time
          used to calculate prorations.
        example: 0
        type:
        - integer
      subtotal:
        description: Total of all subscriptions, invoice items, and prorations on
          the invoice before any discount is applied
        example: 0
        type:
        - integer
      tax:
        description: The amount of tax included in the total, calculated from `tax_percent`
          and the subtotal. If no `tax_percent` is defined, this value will be null.
        example: 0
        type:
        - integer
      tax_percent:
        description: This percentage of the subtotal has been added to the total amount
          of the invoice, including invoice line items and discounts. This field is
          inherited from the subscription's `tax_percent` field, but can be changed
          before the invoice is paid. This field defaults to null.
        example: 0.0
        type:
        - number
      total:
        description: Total after discount
        example: 0
        type:
        - integer
      webhooks_delivered_at:
        description: The time at which webhooks for this invoice were successfully
          delivered (if the invoice had no webhooks to deliver, this will match `date`).  Invoice
          payment is delayed until webhooks are delivered, or until all webhook delivery
          attempts have been exhausted.
        example: 0
        type:
        - integer
    required:
    - amount_due
    - attempt_count
    - attempted
    - closed
    - currency
    - customer
    - date
    - forgiven
    - id
    - lines
    - livemode
    - object
    - paid
    - period_end
    - period_start
    - starting_balance
    - subtotal
    - total
    type:
    - object
    title: Invoice
  invoice-item:
    properties:
      amount:
        description: ''
        example: 1000
        type:
        - integer
      currency:
        description: ''
        example: usd
        type:
        - string
      customer:
        description: ''
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      date:
        description: ''
        example: 1476487304
        type:
        - integer
      description:
        description: ''
        example: My First Invoice Item (created for API docs)
        type:
        - string
      discountable:
        description: If true, discounts will apply to this invoice item. Always false
          for prorations.
        example: true
        type:
        - boolean
      id:
        description: ''
        example: ii_194ezkLguOBlZ9TdDv0UUBmO
        type:
        - string
      invoice:
        description: ''
        example: ''
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to an invoice item      object.
          It can be useful for storing additional information about the invoice item      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: invoiceitem
        type:
        - string
      period:
        description: ''
        example:
          start: 1476487304
          end: 1476487304
        type:
        - object
      plan:
        description: If the invoice item is a proration, the plan of the subscription
          that the proration was computed for.
        example: {}
        type:
        - object
      proration:
        description: Whether or not the invoice item was created automatically as
          a proration adjustment when the customer switched plans
        example: false
        type:
        - boolean
      quantity:
        description: If the invoice item is a proration, the quantity of the subscription
          that the proration was computed for.
        example: 0
        type:
        - integer
      subscription:
        description: The subscription that this invoice item has been created for,
          if any.
        example: ''
        type:
        - string
    required:
    - amount
    - currency
    - customer
    - date
    - discountable
    - id
    - livemode
    - metadata
    - object
    - proration
    type:
    - object
    title: InvoiceItem
  invoice-line-item:
    properties:
      amount:
        description: The amount, in %s
        example: 1000
        type:
        - integer
      currency:
        description: ''
        example: usd
        type:
        - string
      description:
        description: A text description of the line item, if the line item is an invoice
          item
        example: My First Invoice Item (created for API docs)
        type:
        - string
      discountable:
        description: If true, discounts will apply to this line item. Always false
          for prorations.
        example: true
        type:
        - boolean
      id:
        description: The ID of the source of this line item, either an invoice item
          or a subscription
        example: ii_194ezkLguOBlZ9TdDv0UUBmO
        type:
        - string
      livemode:
        description: Whether or not this is a test line item
        example: false
        type:
        - boolean
      metadata:
        description: Key-value pairs attached to object that underlies this line item
          (either subscription or invoice item)
        example: {}
        type:
        - object
      object:
        description: line_item
        example: line_item
        type:
        - string
      period:
        description: The period this line_item covers. For subscription line items,
          this is the subscription period. For prorations, this starts when the proration
          was calculated, and ends at the period end of the subscription. For invoice
          items, this is the time at which the invoice item was created, so the period
          start and end are the same time.
        example:
          start: 1476487304
          end: 1476487304
        type:
        - object
      plan:
        description: The plan of the subscription, if the line item is a subscription
          or a proration
        example: {}
        type:
        - object
      proration:
        description: Whether or not this is a proration
        example: false
        type:
        - boolean
      quantity:
        description: The quantity of the subscription, if the line item is a subscription
          or a proration
        example: 0
        type:
        - integer
      subscription:
        description: When type is `invoiceitem`, the subscription that the invoice
          item pertains to, if any.  Left blank when `type` is already subscription,
          as it'd be redundant with `id`.
        example: ''
        type:
        - string
      type:
        description: A string identifying the type of the source of this line item,
          either an `invoiceitem` or a `subscription`
        example: invoiceitem
        type:
        - string
    required:
    - amount
    - currency
    - discountable
    - id
    - livemode
    - metadata
    - object
    - period
    - proration
    - type
    type:
    - object
    title: InvoiceLineItem
  order:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing
          the total amount for the order.
        example: 1500
        type:
        - integer
      amount_returned:
        description: ''
        example: 0
        type:
        - integer
      application:
        description: ID of the Connect Application that created the order.
        example: ''
        type:
        - string
      application_fee:
        description: ''
        example: 0
        type:
        - integer
      charge:
        description: The ID of the payment used to pay for the order. Present if the
          order status is `paid`, `fulfilled`, or `refunded`.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
          representing the currency in which the order was made.
        example: usd
        type:
        - string
      customer:
        description: The customer used for the order.
        example: ''
        type:
        - string
      email:
        description: The email address of the customer placing the order.
        example: ''
        type:
        - string
      external_coupon_code:
        description: ''
        example: ''
        type:
        - string
      id:
        description: ''
        example: or_194ezkLguOBlZ9TdUdcEmxO3
        type:
        - string
      items:
        description: List of items constituting the order.
        example:
        - object: order_item
          amount: 1500
          currency: usd
          description: T-shirt
          parent: sk_18SXc2LguOBlZ9Td5a2IDyIQ
          quantity: 
          type: sku
        type:
        - array
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to an order object.
          It can be useful for storing additional information about the order in a
          structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: order
        type:
        - string
      returns:
        description: ''
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/order_returns?order=or_194ezkLguOBlZ9TdUdcEmxO3"
        type:
        - object
      selected_shipping_method:
        description: The shipping method that is currently selected for this order,
          if any.  If present, it is equal to one of the `id`s of shipping methods
          in the `shipping_methods` array.  At order creation time, if there are multiple
          shipping methods, Stripe will automatically selected the first method.
        example: ''
        type:
        - string
      shipping:
        description: The shipping address for the order. Present if the order is for
          goods to be shipped.
        example:
          address:
            city: Anytown
            country: US
            line1: 1234 Main street
            line2: 
            postal_code: '123456'
            state: 
          carrier: 
          name: Jenny Rosen
          phone: 
          tracking_number: 
        type:
        - object
      shipping_methods:
        description: A list of supported shipping methods for this order. The desired
          shipping method can be specified either by updating the order, or when paying
          it.
        example: []
        type:
        - array
      status:
        description: Current order status. One of `created`, `paid`, `canceled`, `fulfilled`,
          or `returned`. More detail in the [Relay API Overview](/docs/orders/guide#understanding-order-statuses).
        example: created
        type:
        - string
      status_transitions:
        description: The timestamps at which the order status was updated
        example: {}
        type:
        - object
      updated:
        description: ''
        example: 1476487304
        type:
        - integer
      upstream_id:
        description: The merchant's order ID if it is different from the Stripe order
          ID.
        example: ''
        type:
        - string
    required:
    - amount
    - created
    - currency
    - id
    - items
    - livemode
    - metadata
    - object
    - status
    type:
    - object
    title: Order
  order-return:
    properties:
      amount:
        description: A positive integer in the smallest currency unit (that is, 100
          cents for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency) representing
          the total amount for the returned line item.
        example: 1500
        type:
        - integer
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
          representing the currency of the return.
        example: usd
        type:
        - string
      id:
        description: ''
        example: orret_194ezkLguOBlZ9Tdy1E241nq
        type:
        - string
      items:
        description: The items included in this order return.
        example:
        - object: order_item
          amount: 1500
          currency: usd
          description: T-shirt
          parent: sk_194ezkLguOBlZ9TdzwpRxyGb
          quantity: 
          type: sku
        type:
        - array
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: order_return
        type:
        - string
      order:
        description: The order that this return includes items from
        example: or_194ezkLguOBlZ9TdGpRdgylg
        type:
        - string
      refund:
        description: The ID of the refund issued for this return.
        example: re_194ezkLguOBlZ9Td1ngvm8Pv
        type:
        - string
    required:
    - amount
    - created
    - currency
    - id
    - items
    - livemode
    - object
    type:
    - object
    title: OrderReturn
  payment-bank-account:
    properties:
      account_holder_name:
        description: The name of the person or business that owns the bank account.
        example: Jane Austen
        type:
        - string
      account_holder_type:
        description: The type of entity that holds the account. This can be either
          `individual` or `company`.
        example: individual
        type:
        - string
      bank_name:
        description: Name of the bank associated with the routing number, e.g. `WELLS
          FARGO`.
        example: STRIPE TEST BANK
        type:
        - string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        example: US
        type:
        - string
      currency:
        description: Three-letter ISO currency code representing the currency paid
          out to the bank account.
        example: usd
        type:
        - string
      customer:
        description: ''
        example: ''
        type:
        - string
      fingerprint:
        description: Uniquely identifies this particular bank account.  You can use
          this attribute to check whether two bank accounts are the same.
        example: PciLc7uAqm43dtd7
        type:
        - string
      id:
        description: ''
        example: ba_194ezkLguOBlZ9TdkAnGXE0u
        type:
        - string
      last4:
        description: ''
        example: '6789'
        type:
        - string
      metadata:
        description: ''
        example: {}
        type:
        - object
      object:
        description: ''
        example: bank_account
        type:
        - string
      routing_number:
        description: The routing transit number for the bank account.
        example: '110000000'
        type:
        - string
      status:
        description: Possible values are `new`, `validated`, `verified`, `verification_failed`,
          or `errored`.        A bank account that hasn't had any activity or validation
          performed is `new`.        If Stripe can determine that the bank account
          exists, its status will be `validated`. Note that there often isn’t enough
          information to know (e.g. for smaller credit unions), and the validation
          is not always run.        If customer bank account verification has succeeded,
          the bank account status will be `verified`. If the verification failed for
          any reason, such as microdeposit failure, the status will be `verification_failed`.        If
          a transfer sent to this bank account fails, we'll set the status to `errored`
          and will not continue to send transfers until the bank details are updated.
        example: new
        type:
        - string
    required:
    - country
    - currency
    - id
    - last4
    - metadata
    - object
    - status
    type:
    - object
    title: PaymentBankAccount
  payment-card:
    properties:
      address_city:
        description: ''
        example: ''
        type:
        - string
      address_country:
        description: Billing address country, if provided when creating card
        example: ''
        type:
        - string
      address_line1:
        description: ''
        example: ''
        type:
        - string
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        example: ''
        type:
        - string
      address_line2:
        description: ''
        example: ''
        type:
        - string
      address_state:
        description: ''
        example: ''
        type:
        - string
      address_zip:
        description: ''
        example: ''
        type:
        - string
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        example: ''
        type:
        - string
      brand:
        description: Card brand. Can be `Visa`, `American Express`, `MasterCard`,
          `Discover`, `JCB`, `Diners Club`, or `Unknown`.
        example: Visa
        type:
        - string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        example: ''
        type:
        - string
      customer:
        description: ''
        example: ''
        type:
        - string
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`'
        example: ''
        type:
        - string
      dynamic_last4:
        description: "(For tokenized numbers only.) The last four digits of the device
          account number."
        example: ''
        type:
        - string
      exp_month:
        description: ''
        example: 8
        type:
        - integer
      exp_year:
        description: ''
        example: 2017
        type:
        - integer
      fingerprint:
        description: Uniquely identifies this particular card number.  You can use
          this attribute to check whether two customers who've signed up with you
          are using the same card number, for example.
        example: ''
        type:
        - string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`
        example: unknown
        type:
        - string
      id:
        description: ID of card (used in conjunction with a customer or recipient
          ID)
        example: card_18SXbrLguOBlZ9Td3I6bwCDi
        type:
        - string
      last4:
        description: ''
        example: '4242'
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to a card object.
          It can be useful for storing additional information about the card in a
          structured format.
        example: {}
        type:
        - object
      name:
        description: Cardholder name
        example: ''
        type:
        - string
      object:
        description: ''
        example: card
        type:
        - string
      tokenization_method:
        description: If the card number is tokenized, this is the method that was
          used. Can be `apple_pay` or `android_pay`.
        example: ''
        type:
        - string
    required:
    - brand
    - exp_month
    - exp_year
    - funding
    - id
    - last4
    - metadata
    - object
    type:
    - object
    title: PaymentCard
  plan:
    properties:
      amount:
        description: The amount in %s to be charged on the interval specified
        example: 2000
        type:
        - integer
      created:
        description: ''
        example: 1467402464
        type:
        - integer
      currency:
        description: Currency in which subscription will be charged
        example: usd
        type:
        - string
      id:
        description: ''
        example: gold
        type:
        - string
      interval:
        description: One of `day`, `week`, `month` or `year`. The frequency with which
          a subscription should be billed.
        example: month
        type:
        - string
      interval_count:
        description: The number of intervals (specified in the `interval` property)
          between each subscription billing. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        example: 1
        type:
        - integer
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a plan object.
          It can be useful for storing additional information about the plan in a
          structured format.
        example: {}
        type:
        - object
      name:
        description: Display name of the plan
        example: Gold Special
        type:
        - string
      object:
        description: ''
        example: plan
        type:
        - string
      statement_descriptor:
        description: Extra information about a charge for the customer's credit card
          statement.
        example: ''
        type:
        - string
      trial_period_days:
        description: Number of trial period days granted when subscribing a customer
          to this plan.  Null if the plan has no trial period.
        example: 0
        type:
        - integer
    required:
    - amount
    - created
    - currency
    - id
    - interval
    - interval_count
    - livemode
    - metadata
    - name
    - object
    type:
    - object
    title: Plan
  platform-earning:
    properties:
      account:
        description: ID of the Stripe account this fee was taken from.
        example: acct_18SXbULguOBlZ9Td
        type:
        - string
      amount:
        description: Amount earned, in %s.
        example: 100
        type:
        - integer
      amount_refunded:
        description: Amount in cents refunded (can be less than the amount attribute
          on the fee if a partial refund was issued)
        example: 0
        type:
        - integer
      application:
        description: ID of the Connect Application that earned the fee.
        example: ca_9NPpQ65lgQuj3UvayNSfLVOxDDLcbF4g
        type:
        - string
      balance_transaction:
        description: Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
        example: txn_194ezjLguOBlZ9TdZ8zi2Nkq
        type:
        - string
      charge:
        description: ID of the charge that the application fee was taken from.
        example: ch_194ezjLguOBlZ9TdqGsCYBqH
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: Three-letter ISO code representing the currency of the charge.
        example: usd
        type:
        - string
      id:
        description: ''
        example: fee_9NPpLM1NGb3Bu0
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: application_fee
        type:
        - string
      originating_transaction:
        description: ID of the corresponding charge on the platform account, if this
          fee was the result of a charge using the <code>destination</code> parameter.
        example: ''
        type:
        - string
      refunded:
        description: Whether or not the fee has been fully refunded.  If the fee is
          only partially refunded,        this attribute will still be false.
        example: false
        type:
        - boolean
      refunds:
        description: A list of refunds that have been applied to the fee.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/application_fees/fee_9NPpLM1NGb3Bu0/refunds"
        type:
        - object
    required:
    - account
    - amount
    - amount_refunded
    - application
    - balance_transaction
    - charge
    - created
    - currency
    - id
    - livemode
    - object
    - refunded
    - refunds
    type:
    - object
    title: PlatformEarning
  product:
    properties:
      active:
        description: Whether or not the product is currently available for purchase.
        example: true
        type:
        - boolean
      attributes:
        description: A list of up to 5 attributes that each SKU can provide values
          for (e.g. `["color", "size"]`).
        example:
        - size
        - gender
        type:
        - array
      caption:
        description: A short one-line description of the product, meant to be displayable
          to the customer.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      deactivate_on:
        description: An array of connect application identifiers that cannot purchase
          this product.
        example: []
        type:
        - array
      description:
        description: The product's description, meant to be displayable to the customer.
        example: Comfortable gray cotton t-shirts
        type:
        - string
      id:
        description: ''
        example: prod_9NPpdIkz3VXKGf
        type:
        - string
      images:
        description: A list of up to 8 URLs of images for this product, meant to be
          displayable to the customer.
        example: []
        type:
        - array
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a product      object.
          It can be useful for storing additional information about the product      in
          a structured format.
        example: {}
        type:
        - object
      name:
        description: The product's name, meant to be displayable to the customer.
        example: T-shirt
        type:
        - string
      object:
        description: ''
        example: product
        type:
        - string
      package_dimensions:
        description: The dimensions of this product for shipping purposes. A SKU    associated
          with this product can override this value by having its own `package_dimensions`
        example: {}
        type:
        - object
      shippable:
        description: Whether this product is a shipped good.
        example: true
        type:
        - boolean
      skus:
        description: A sublist of active SKUs associated with this product.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/skus?product=prod_9NPpdIkz3VXKGf&active=true"
        type:
        - object
      updated:
        description: ''
        example: 1476487304
        type:
        - integer
      url:
        description: A URL of a publicly-accessible webpage for this product.
        example: ''
        type:
        - string
    required:
    - active
    - created
    - id
    - images
    - livemode
    - metadata
    - name
    - object
    - shippable
    - skus
    - updated
    type:
    - object
    title: Product
  recipient-payout-card:
    properties:
      address_city:
        description: ''
        example: ''
        type:
        - string
      address_country:
        description: Billing address country, if provided when creating card
        example: ''
        type:
        - string
      address_line1:
        description: ''
        example: ''
        type:
        - string
      address_line1_check:
        description: 'If `address_line1` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        example: ''
        type:
        - string
      address_line2:
        description: ''
        example: ''
        type:
        - string
      address_state:
        description: ''
        example: ''
        type:
        - string
      address_zip:
        description: ''
        example: ''
        type:
        - string
      address_zip_check:
        description: 'If `address_zip` was provided, results of the check: `pass`,
          `fail`, `unavailable`, or `unchecked`.'
        example: ''
        type:
        - string
      brand:
        description: Card brand. Can be `Visa`, `American Express`, `MasterCard`,
          `Discover`, `JCB`, `Diners Club`, or `Unknown`.
        example: ''
        type:
        - string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        example: ''
        type:
        - string
      cvc_check:
        description: 'If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`'
        example: ''
        type:
        - string
      dynamic_last4:
        description: "(For tokenized numbers only.) The last four digits of the device
          account number."
        example: ''
        type:
        - string
      exp_month:
        description: ''
        example: 0
        type:
        - integer
      exp_year:
        description: ''
        example: 0
        type:
        - integer
      fingerprint:
        description: Uniquely identifies this particular card number.  You can use
          this attribute to check whether two customers who've signed up with you
          are using the same card number, for example.
        example: ''
        type:
        - string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`
        example: ''
        type:
        - string
      id:
        description: ID of card (used in conjunction with a customer or recipient
          ID)
        example: ''
        type:
        - string
      last4:
        description: ''
        example: ''
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to a card object.
          It can be useful for storing additional information about the card in a
          structured format.
        example: {}
        type:
        - object
      name:
        description: Cardholder name
        example: ''
        type:
        - string
      object:
        description: ''
        example: ''
        type:
        - string
      recipient:
        description: ''
        example: ''
        type:
        - string
      tokenization_method:
        description: If the card number is tokenized, this is the method that was
          used. Can be `apple_pay` or `android_pay`.
        example: ''
        type:
        - string
    required:
    - brand
    - exp_month
    - exp_year
    - funding
    - id
    - last4
    - metadata
    - object
    type:
    - object
    title: RecipientPayoutCard
  refund:
    properties:
      amount:
        description: Amount, in %s.
        example: 100
        type:
        - integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        example: ''
        type:
        - string
      charge:
        description: ID of the charge that was refunded.
        example: ch_194ezjLguOBlZ9TdqGsCYBqH
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: Three-letter ISO code representing the currency.
        example: usd
        type:
        - string
      description:
        description: ''
        example: ''
        type:
        - string
      id:
        description: ''
        example: re_194ezkLguOBlZ9Td7vBbRaKw
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to the object. It
          can be useful for storing additional information in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: refund
        type:
        - string
      reason:
        description: Reason for the refund. If set, possible values are `duplicate`,
          `fraudulent`, and `requested_by_customer`.
        example: ''
        type:
        - string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this refund.
        example: ''
        type:
        - string
      status:
        description: Status of the refund. For credit card refunds, this will always
          be `succeeded`. For other types of refunds, it can be `pending`, `succeeded`,
          `failed`, or `cancelled`.
        example: succeeded
        type:
        - string
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    type:
    - object
    title: Refund
  sku:
    properties:
      active:
        description: Whether or not the SKU is available for purchase.
        example: true
        type:
        - boolean
      attributes:
        description: 'A dictionary of attributes and values for the attributes defined
          by the product. If, for example, a product''s attributes are `["size", "gender"]`,
          a valid SKU has the following dictionary of attributes: `{"size": "Medium",
          "gender": "Unisex"}`.'
        example:
          size: Medium
          gender: Unisex
        type:
        - object
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
          for currency.
        example: usd
        type:
        - string
      id:
        description: ''
        example: sku_9NPpdf3WJ365ld
        type:
        - string
      image:
        description: The URL of an image for this SKU, meant to be displayable to
          the customer.
        example: ''
        type:
        - string
      inventory:
        description: Description of the SKU's inventory.
        example:
          quantity: 50
          type: finite
          value: 
        type:
        - object
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a SKU    object.
          It can be useful for storing additional information about the SKU    in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: sku
        type:
        - string
      package_dimensions:
        description: The dimensions of this SKU for shipping purposes.
        example: {}
        type:
        - object
      price:
        description: The cost of the item as a positive integer in the smallest currency
          unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese
          Yen being a 0-decimal currency).
        example: 1500
        type:
        - integer
      product:
        description: The ID of the product this SKU is associated with. The product
          must be currently active.
        example: prod_9NPpdIkz3VXKGf
        type:
        - string
      updated:
        description: ''
        example: 1476487304
        type:
        - integer
    required:
    - active
    - attributes
    - created
    - currency
    - id
    - inventory
    - livemode
    - metadata
    - object
    - price
    - product
    - updated
    type:
    - object
    title: SKU
  source:
    properties:
      amount:
        description: Amount associated with the source. This is the amount for which
          the source will be chargeable once ready. Required for `single-use` sources.
        example: 0
        type:
        - integer
      client_secret:
        description: The client secret of the source. Used for client-side polling
          using a publishable key.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 0
        type:
        - integer
      currency:
        description: The currency associated with the source. This is the currency
          for which the source will be chargeable once ready. Required for `single-use`
          sources.
        example: ''
        type:
        - string
      flow:
        description: The authentication `flow` of the source. `flow` is one of `redirect`,
          `receiver`, `verification`, `none`.
        example: ''
        type:
        - string
      id:
        description: ''
        example: card_18SXbrLguOBlZ9Td3I6bwCDi
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a source object.
          It can be useful for storing additional information about the source in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: card
        type:
        - string
      owner:
        description: Information about the owner of the payment instrument that may
          be used or required by particular source types.
        example: {}
        type:
        - object
      receiver:
        description: Information related to the receiver flow. Present if the source
          is a receiver (`flow` is `receiver`).
        example: {}
        type:
        - object
      redirect:
        description: Information related to the redirect flow. Present if the source
          is authenticated by a redirect (`flow` is `redirect`).
        example: {}
        type:
        - object
      status:
        description: The status of the charge. `status` is one of `pending`, `chargeable`,
          `consumed`, `canceled`. Only `chargeable` source objects can be used to
          create a charge.
        example: ''
        type:
        - string
      type:
        description: The `type` of the source to create.
        example: ''
        type:
        - string
      usage:
        description: One of `reusable`, `single-use`. Whether this source should be
          reusable or not. Some source types may or may not be reusable by construction,
          while other may leave the option at creation. If an incompatible value is
          passed, an error will be returned.
        example: ''
        type:
        - string
      verification:
        description: Information related to the verification flow. Present if the
          source is authenticated by a verification code (`flow` is `verification`).
        example: {}
        type:
        - object
    required:
    - client_secret
    - created
    - flow
    - id
    - livemode
    - object
    - status
    - type
    - usage
    type:
    - object
    title: Source
  subscription:
    properties:
      application_fee_percent:
        description: A positive decimal that represents the fee percentage of the
          subscription invoice amount that will be transferred to the application
          owner's Stripe account each billing period.
        example: 0.0
        type:
        - number
      cancel_at_period_end:
        description: If the subscription has been canceled with the `at_period_end`
          flag set to `true`, `cancel_at_period_end` on the subscription will be true.  You
          can use this attribute to determine whether a subscription that has a status
          of active is scheduled to be canceled at the end of the current period.
        example: false
        type:
        - boolean
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`, canceled_at
          will still reflect the date of the initial cancellation request, not the
          end of the subscription period when the subscription is automatically moved
          to a canceled state.
        example: 0
        type:
        - integer
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      current_period_end:
        description: End of the current period that the subscription has been invoiced
          for.  At the end of this period, a new invoice will be created.
        example: 1479165704
        type:
        - integer
      current_period_start:
        description: Start of the current period that the subscription has been invoiced
          for
        example: 1476487304
        type:
        - integer
      customer:
        description: ID of the customer who owns the subscription
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      discount:
        description: Describes the current discount applied to this subscription,
          if there is one.  When billing, a discount applied to a subscription overrides
          a discount applied on a customer-wide basis.
        example: {}
        type:
        - object
      ended_at:
        description: If the subscription has ended (either because it was canceled
          or because the customer was switched to a subscription to a new plan), the
          date the subscription ended
        example: 0
        type:
        - integer
      id:
        description: ''
        example: sub_9NPprbcAjRJKdQ
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a subscription      object.
          It can be useful for storing additional information about the subscription      in
          a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: subscription
        type:
        - string
      plan:
        description: Hash describing the plan the customer is subscribed to
        example:
          id: gold
          object: plan
          amount: 2000
          created: 1467402464
          currency: usd
          interval: month
          interval_count: 1
          livemode: false
          metadata: {}
          name: Gold Special
          statement_descriptor: 
          trial_period_days: 
        type:
        - object
      quantity:
        description: The quantity of the plan to which the customer should be subscribed.
          For example, if your plan is $10/user/month, and your customer has 5 users,
          you could pass 5 as the quantity to have the customer charged $50 (5 x $10)
          monthly.
        example: 1
        type:
        - integer
      start:
        description: Date the most recent update to this subscription started.
        example: 1476487304
        type:
        - integer
      status:
        description: Possible values are `trialing`, `active`, `past_due`, `canceled`,
          or `unpaid`. A subscription still in its trial period is `trialing` and
          moves to `active` when the trial period is over. When payment to renew the
          subscription fails, the subscription becomes `past_due`. After Stripe has
          exhausted all payment retry attempts, the subscription ends up with a status
          of either `canceled` or `unpaid` depending on your retry settings. Note
          that when a subscription has a status of `unpaid`, no subsequent invoices
          will be attempted (invoices will be created, but then immediately automatically
          closed. Additionally, updating customer card details will not lead to Stripe
          retrying the latest invoice.). After receiving updated card details from
          a customer, you may choose to reopen and pay their closed invoices.
        example: active
        type:
        - string
      tax_percent:
        description: If provided, each invoice created by this subscription will apply
          the tax rate, increasing the amount billed to the customer.
        example: 0.0
        type:
        - number
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        example: 0
        type:
        - integer
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        example: 0
        type:
        - integer
    required:
    - cancel_at_period_end
    - created
    - customer
    - id
    - livemode
    - metadata
    - object
    - start
    - status
    type:
    - object
    title: Subscription
  subscription-item:
    properties:
      created:
        description: ''
        example: 0
        type:
        - integer
      id:
        description: ''
        example: ''
        type:
        - string
      object:
        description: ''
        example: ''
        type:
        - string
      plan:
        description: ''
        example: {}
        type:
        - object
      quantity:
        description: ''
        example: 0
        type:
        - integer
    required:
    - created
    - id
    - object
    - plan
    - quantity
    type:
    - object
    title: SubscriptionItem
  system-refund:
    properties:
      amount:
        description: Amount, in %s.
        example: 0
        type:
        - integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        example: ''
        type:
        - string
      charge:
        description: ID of the charge that was refunded.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 0
        type:
        - integer
      currency:
        description: Three-letter ISO code representing the currency.
        example: ''
        type:
        - string
      description:
        description: ''
        example: ''
        type:
        - string
      id:
        description: ''
        example: ''
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to the object. It
          can be useful for storing additional information in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: ''
        type:
        - string
      reason:
        description: Reason for the refund. If set, possible values are `duplicate`,
          `fraudulent`, and `requested_by_customer`.
        example: ''
        type:
        - string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this refund.
        example: ''
        type:
        - string
      status:
        description: Status of the refund. For credit card refunds, this will always
          be `succeeded`. For other types of refunds, it can be `pending`, `succeeded`,
          `failed`, or `cancelled`.
        example: ''
        type:
        - string
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    type:
    - object
    title: SystemRefund
  three-d-secure:
    properties:
      amount:
        description: ''
        example: 1500
        type:
        - integer
      authenticated:
        description: True if the cardholder went through the authentication flow and
          their bank indicated that authentication succeeded.
        example: false
        type:
        - boolean
      card:
        description: ''
        example:
          id: card_18SXbrLguOBlZ9Td3I6bwCDi
          object: card
          address_city: 
          address_country: 
          address_line1: 
          address_line1_check: 
          address_line2: 
          address_state: 
          address_zip: 
          address_zip_check: 
          brand: Visa
          country: 
          customer: 
          cvc_check: 
          dynamic_last4: 
          exp_month: 8
          exp_year: 2017
          funding: unknown
          last4: '4242'
          metadata: {}
          name: 
          tokenization_method: 
        type:
        - object
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: ''
        example: usd
        type:
        - string
      id:
        description: ''
        example: tdsrc_9NPpZkmuqhIeXi
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: three_d_secure
        type:
        - string
      redirect_url:
        description: If present, this is the URL that you should send the cardholder
          to for authentication. If you are going to use Stripe.js to display the
          authentication page in an iframe, you should use the value "_callback".
        example: http://127.0.0.1:6080/3d_secure/authenticate/tdsrc_9NPpZkmuqhIeXi
        type:
        - string
      status:
        description: Possible values are `redirect_pending`, `succeeded`, or `failed`.
          When the cardholder can be authenticated, the object starts with status
          `redirect_pending`. When liability will be shifted to the cardholder's bank
          (either because the cardholder was successfully authenticated, or because
          the bank has not implemented 3D Secure, the object wlil be in status `succeeded`.
          `failed` indicates that authentication was attempted unsuccessfully.
        example: redirect_pending
        type:
        - string
    required:
    - amount
    - authenticated
    - card
    - created
    - currency
    - id
    - livemode
    - object
    - status
    type:
    - object
    title: ThreeDSecure
  token:
    properties:
      bank_account:
        description: Hash describing the bank account
        example: {}
        type:
        - object
      card:
        description: Hash describing the card used to make the charge
        example:
          id: card_18SXbrLguOBlZ9Td3I6bwCDi
          object: card
          address_city: 
          address_country: 
          address_line1: 
          address_line1_check: 
          address_line2: 
          address_state: 
          address_zip: 
          address_zip_check: 
          brand: Visa
          country: 
          cvc_check: 
          dynamic_last4: 
          exp_month: 8
          exp_year: 2017
          funding: unknown
          last4: '4242'
          metadata: {}
          name: 
          tokenization_method: 
        type:
        - object
      client_ip:
        description: IP address of the client that generated the token
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1467402451
        type:
        - integer
      id:
        description: ''
        example: tok_18SXbrLguOBlZ9TdPUVw9dyQ
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      object:
        description: ''
        example: token
        type:
        - string
      type:
        description: 'Type of the token: `card` or `bank_account`'
        example: card
        type:
        - string
      used:
        description: Whether or not this token has already been used (tokens can be
          used only once)
        example: false
        type:
        - boolean
    required:
    - created
    - id
    - livemode
    - object
    - type
    - used
    type:
    - object
    title: Token
  transfer:
    properties:
      amount:
        description: Amount (in %s) to be transferred to your bank account
        example: 1100
        type:
        - integer
      amount_reversed:
        description: Amount in %s reversed (can be less than the amount attribute
          on the transfer if a partial reversal was issued).
        example: 0
        type:
        - integer
      application_fee:
        description: ''
        example: ''
        type:
        - string
      balance_transaction:
        description: Balance transaction that describes the impact of this transfer
          on your account balance.
        example: txn_194ezjLguOBlZ9TdZ8zi2Nkq
        type:
        - string
      created:
        description: Time that this record of the transfer was first created.
        example: 1476487304
        type:
        - integer
      currency:
        description: ''
        example: usd
        type:
        - string
      date:
        description: Date the transfer is scheduled to arrive in the bank. This factors
          in delays like weekends or bank holidays.
        example: 1476487304
        type:
        - integer
      description:
        description: Internal-only description of the transfer
        example: Transfer to test@example.com
        type:
        - string
      destination:
        description: ID of the bank account, card, or Stripe account the transfer
          was sent to.
        example: ba_194ezkLguOBlZ9TddSlIpIg7
        type:
        - string
      destination_payment:
        description: If the destination is a Stripe account, this will be the ID of
          the payment that the destination account received for the transfer.
        example: ''
        type:
        - string
      failure_code:
        description: Error code explaining reason for transfer failure if available.
          See [Types of transfer failures](/docs/api#transfer_failures) for a list
          of failure codes.
        example: ''
        type:
        - string
      failure_message:
        description: Message to user further explaining reason for transfer failure
          if available.
        example: ''
        type:
        - string
      id:
        description: ''
        example: tr_194ezkLguOBlZ9TdqIc9ruaV
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a transfer      object.
          It can be useful for storing additional information about the transfer      in
          a structured format.
        example: {}
        type:
        - object
      method:
        description: The method used to send this transfer, which can be `standard`
          or `instant`. `instant` is only supported for transfers to debit cards.
          (See [Instant payouts for marketplaces](/blog/instant-payouts-for-marketplaces)
          for more information.)
        example: ''
        type:
        - string
      object:
        description: ''
        example: transfer
        type:
        - string
      reversals:
        description: A list of reversals that have been applied to the transfer.
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/transfers/tr_194ezkLguOBlZ9TdqIc9ruaV/reversals"
        type:
        - object
      reversed:
        description: Whether or not the transfer has been fully reversed.  If the
          transfer is only partially reversed, this attribute will still be false.
        example: false
        type:
        - boolean
      source_transaction:
        description: ID of the charge (or other transaction) that was used to fund
          the transfer. If null, the transfer was funded from the available balance.
        example: ''
        type:
        - string
      source_type:
        description: The source balance this transfer came from. One of `card`, `bank_account`,
          `bitcoin_receiver`, or `alipay_account`
        example: card
        type:
        - string
      statement_descriptor:
        description: Extra information about a transfer to be displayed on the user's
          bank statement.
        example: ''
        type:
        - string
      status:
        description: Current status of the transfer (`paid`, `pending`, `in_transit`,
          `canceled` or `failed`).  A transfer will be `pending` until it is submitted
          to the bank, at which point it becomes `in_transit`. It will then change
          to `paid` if the transaction goes through. If it does not go through successfully,
          its status will change to `failed` or `canceled`.
        example: in_transit
        type:
        - string
      type:
        description: Can be `card`, `bank_account`, or `stripe_account`.
        example: bank_account
        type:
        - string
    required:
    - amount
    - amount_reversed
    - created
    - currency
    - date
    - id
    - livemode
    - metadata
    - object
    - reversals
    - reversed
    - status
    - type
    type:
    - object
    title: Transfer
  transfer-recipient:
    properties:
      active_account:
        description: Hash describing the current account on the recipient, if there
          is one.
        example: {}
        type:
        - object
      cards:
        description: ''
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/recipients/rp_194ezkLguOBlZ9TdpYRU5ayb/cards"
        type:
        - object
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      default_card:
        description: The default card to use for creating transfers to this recipient.
        example: ''
        type:
        - string
      description:
        description: ''
        example: Recipient for John Doe
        type:
        - string
      email:
        description: ''
        example: test@example.com
        type:
        - string
      id:
        description: ''
        example: rp_194ezkLguOBlZ9TdpYRU5ayb
        type:
        - string
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to a recipient      object.
          It can be useful for storing additional information about the recipient      in
          a structured format.
        example: {}
        type:
        - object
      migrated_to:
        description: 'The ID of the [managed account](/docs/connect/managed-accounts)
          this recipient was migrated to. If set, the recipient can no longer be updated,
          nor can transfers be made to it: use the managed account instead.'
        example: ''
        type:
        - string
      name:
        description: Full, legal name of the recipient.
        example: John Doe
        type:
        - string
      object:
        description: ''
        example: recipient
        type:
        - string
      type:
        description: Type of the recipient, one of `individual` or `corporation`.
        example: individual
        type:
        - string
    required:
    - created
    - id
    - livemode
    - metadata
    - object
    - type
    type:
    - object
    title: TransferRecipient
  transfer-reversal:
    properties:
      amount:
        description: Amount, in %s.
        example: 1100
        type:
        - integer
      balance_transaction:
        description: Balance transaction that describes the impact on your account
          balance.
        example: ''
        type:
        - string
      created:
        description: ''
        example: 1476487304
        type:
        - integer
      currency:
        description: Three-letter ISO code representing the currency.
        example: usd
        type:
        - string
      id:
        description: ''
        example: trr_194ezkLguOBlZ9TdKzFvTrZ5
        type:
        - string
      metadata:
        description: A set of key/value pairs that you can attach to the object. It
          can be useful for storing additional information in a structured format.
        example: {}
        type:
        - object
      object:
        description: ''
        example: transfer_reversal
        type:
        - string
      transfer:
        description: ID of the transfer that was reversed.
        example: tr_194ezkLguOBlZ9TdqIc9ruaV
        type:
        - string
    required:
    - amount
    - created
    - currency
    - id
    - metadata
    - object
    - transfer
    type:
    - object
    title: TransferReversal
  transfer-transaction:
    properties:
      amount:
        description: ''
        example: 0
        type:
        - integer
      created:
        description: ''
        example: 0
        type:
        - integer
      currency:
        description: ''
        example: ''
        type:
        - string
      customer_details:
        description: ''
        example: ''
        type:
        - string
      description:
        description: ''
        example: ''
        type:
        - string
      fee:
        description: ''
        example: 0
        type:
        - integer
      fee_details:
        description: ''
        example: []
        type:
        - array
      id:
        description: ''
        example: ''
        type:
        - string
      net:
        description: ''
        example: 0
        type:
        - integer
      type:
        description: ''
        example: ''
        type:
        - string
    required:
    - amount
    - created
    - currency
    - fee
    - fee_details
    - id
    - net
    - type
    type:
    - object
    title: TransferTransaction
  upcoming-invoice:
    properties:
      amount_due:
        description: Final amount due at this time for this invoice.  If the invoice's
          total is smaller than the minimum charge amount, for example, or if there
          is account credit that can be applied to the invoice, the `amount_due` may
          be 0.  If there is a positive `starting_balance` for the invoice (the customer
          owes money), the amount_due will also take that into account.  The charge
          that gets generated for the invoice will be for the amount specified in
          `amount_due`.
        example: 0
        type:
        - integer
      application_fee:
        description: The fee in %s that will be applied to the invoice and transferred
          to the application owner's Stripe account when the invoice is paid.
        example: 0
        type:
        - integer
      attempt_count:
        description: Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule.  Any payment attempt counts as the first
          attempt, and subsequently only automatic retries increment the attempt count.  In
          other words, manual payment attempts after the first attempt do not affect
          the retry schedule.
        example: 0
        type:
        - integer
      attempted:
        description: Whether or not an attempt has been made to pay the invoice. An
          invoice is not attempted until 1 hour after the `invoice.created` webhook,
          for example, so you might not want to display that invoice as unpaid to
          your users.
        example: false
        type:
        - boolean
      charge:
        description: ID of the latest charge generated for this invoice, if any.
        example: ''
        type:
        - string
      closed:
        description: Whether or not the invoice is still trying to collect payment.
          An invoice is closed if it's either paid or it has been marked closed.  A
          closed invoice will no longer attempt to collect payment.
        example: false
        type:
        - boolean
      currency:
        description: ''
        example: usd
        type:
        - string
      customer:
        description: ''
        example: cus_8k1f9EnJjAIc1U
        type:
        - string
      date:
        description: ''
        example: 1476487304
        type:
        - integer
      description:
        description: ''
        example: ''
        type:
        - string
      discount:
        description: ''
        example: {}
        type:
        - object
      ending_balance:
        description: Ending customer balance after attempting to pay invoice.  If
          the invoice has not been attempted yet, this will be null.
        example: 0
        type:
        - integer
      forgiven:
        description: Whether or not the invoice has been forgiven.  Forgiving an invoice
          instructs us to update the subscription status as if the invoice were successfully
          paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened
        example: false
        type:
        - boolean
      lines:
        description: 'The individual line items that make up the invoice. `lines`
          is sorted as follows: invoice items in reverse chronological order, followed
          by the subscription, if any.'
        example:
          object: list
          data: []
          has_more: false
          total_count: 0
          url: "/v1/invoices/in_194ezkLguOBlZ9TdyttsQ22D/lines"
        type:
        - object
      livemode:
        description: ''
        example: false
        type:
        - boolean
      metadata:
        description: A set of key/value pairs that you can attach to an invoice object.
          It can be useful for storing additional information about the invoice in
          a structured format.
        example: {}
        type:
        - object
      next_payment_attempt:
        description: The time at which payment will next be attempted.
        example: 1476490904
        type:
        - integer
      object:
        description: ''
        example: invoice
        type:
        - string
      paid:
        description: Whether or not payment was successfully collected for this invoice.  An
          invoice can be paid (most commonly) with a charge or with credit from the
          customer's account balance.
        example: false
        type:
        - boolean
      period_end:
        description: End of the usage period during which invoice items were added
          to this invoice
        example: 1476487304
        type:
        - integer
      period_start:
        description: Start of the usage period during which invoice items were added
          to this invoice
        example: 1476487304
        type:
        - integer
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this invoice.
        example: ''
        type:
        - string
      starting_balance:
        description: Starting customer balance before attempting to pay invoice.  If
          the invoice has not been attempted yet, this will be the current customer
          balance.
        example: 0
        type:
        - integer
      statement_descriptor:
        description: Extra information about an invoice for the customer's credit
          card statement.
        example: ''
        type:
        - string
      subscription:
        description: The subscription that this invoice was prepared for, if any.
        example: ''
        type:
        - string
      subscription_proration_date:
        description: Only set for upcoming invoices that preview prorations. The time
          used to calculate prorations.
        example: 0
        type:
        - integer
      subtotal:
        description: Total of all subscriptions, invoice items, and prorations on
          the invoice before any discount is applied
        example: 0
        type:
        - integer
      tax:
        description: The amount of tax included in the total, calculated from `tax_percent`
          and the subtotal. If no `tax_percent` is defined, this value will be null.
        example: 0
        type:
        - integer
      tax_percent:
        description: This percentage of the subtotal has been added to the total amount
          of the invoice, including invoice line items and discounts. This field is
          inherited from the subscription's `tax_percent` field, but can be changed
          before the invoice is paid. This field defaults to null.
        example: 0.0
        type:
        - number
      total:
        description: Total after discount
        example: 0
        type:
        - integer
      webhooks_delivered_at:
        description: The time at which webhooks for this invoice were successfully
          delivered (if the invoice had no webhooks to deliver, this will match `date`).  Invoice
          payment is delayed until webhooks are delivered, or until all webhook delivery
          attempts have been exhausted.
        example: 0
        type:
        - integer
    required:
    - amount_due
    - attempt_count
    - attempted
    - closed
    - currency
    - customer
    - date
    - forgiven
    - lines
    - livemode
    - object
    - paid
    - period_end
    - period_start
    - starting_balance
    - subtotal
    - total
    type:
    - object
    title: UpcomingInvoice
  error: {}
host: api.stripe.com
info:
  version: '2016-07-06'
  title: Stripe API
  description: The Stripe REST API. Please see https://stripe.com/docs/api for more
    details.
  termsOfService: https://stripe.com/us/terms/
  contact:
    name: Stripe Dev Platform Team
    email: dev-platform@stripe.com
    url: https://stripe.com
paths:
  "/v1/3d_secure":
    post:
      description: ''
      operationId: Create3DSecure
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            currency:
              description: Currency of the charge that you will create when authentication
                completes.
              type:
              - string
              title: currency
            amount:
              description: Amount of the charge that you will create when authentication
                completes.
              type:
              - integer
              title: amount
            card:
              description: The ID of a card token, or the ID of a card belonging to
                the given customer.
              type:
              - string
              title: card
            customer:
              description: ''
              type:
              - string
              title: customer
            return_url:
              description: The URL that the cardholder's browser will be returned
                to when authentication completes.
              type:
              - string
              title: return_url
          required:
          - currency
          - amount
          - return_url
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/three-d-secure"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account":
    delete:
      description: |-
        <p>With <a href="/docs/connect">Connect</a>, you may delete Stripe accounts you manage.</p>

        <p>Managed accounts created using test-mode keys can be deleted at any time. Managed accounts created using live-mode keys may only be deleted once all balances are zero.</p>

        <p>If you are looking to close your own account, use the <a href="http://127.0.0.1:6090/account/data">data tab in your account settings</a> instead.</p>
      operationId: AccountDelete
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            account:
              description: The identifier of the account to be deleted. If none is
                provided, will default to the account of the API key.
              type:
              - string
              title: account
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of the account.</p>"
      operationId: AccountRetrieve
      parameters:
      - description: The identifier of the account to be retrieved. If none is provided,
          will default to the account of the API key.
        in: query
        name: account
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: AccountUpdate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_currency:
              description: Three-letter ISO currency code representing the default
                currency for the account. This must be a currency that [Stripe supports
                in the account's country](http://127.0.0.1:8080/questions/which-currencies-does-stripe-support).
              type:
              - string
              title: default_currency
            statement_descriptor:
              description: The text that will appear on credit card statements by
                default if a charge is being made [directly on the account](/docs/connect/payments-fees#charging-directly).
              type:
              - string
              title: statement_descriptor
            transfer_statement_descriptor:
              description: The text that will appear on the account's bank account
                statement for payouts. If not set, this will default to your platform's
                bank descriptor set on the Dashboard.
              type:
              - string
              title: transfer_statement_descriptor
            email:
              description: 'Email address of the account holder. For standalone accounts,
                this is used to email them asking them to claim their Stripe account.
                For managed accounts, this is only to make the account easier to identify
                to you: Stripe will not email the account holder.'
              type:
              - string
              title: email
            product_description:
              description: Internal-only description of the product being sold or
                service being provided by this account. It's used by Stripe for risk
                and underwriting purposes.
              type:
              - string
              title: product_description
            external_account:
              description: A card or bank account to attach to the account. You can
                provide either a token, like the ones returned by [Stripe.js](/docs/stripe.js),
                or a dictionary as documented in the external_account parameter for
                either [card](/docs/api#account_create_card) or [bank account](/docs/api#account_create_bank_account)
                creation. <br><br>This will create a new external account object,
                make it the new default external account for its currency, and delete
                the old default if one exists. If you want to add additional external
                accounts instead of replacing the existing default for this currency,
                use the bank account or card creation API.
              type:
              - object
              - string
              title: external_account
            debit_negative_balances:
              description: A boolean for whether or not Stripe should try to reclaim
                negative balances from the account holder's bank account. See our
                [managed account bank transfer guide](/docs/connect/bank-transfers#negative-balances)
                for more information
              type:
              - boolean
              title: debit_negative_balances
            decline_charge_on:
              description: Account-level settings to automatically decline certain
                types of charges regardless of the bank's decision.
              type:
              - object
              title: decline_charge_on
            legal_entity:
              description: Information about the account holder; varies by [account
                country](#country_spec_object-verification_fields) and [account status](#account_object-verification-fields_needed).
              type:
              - object
              title: legal_entity
            tos_acceptance:
              description: Details on who accepted the Stripe terms of service, and
                when they accepted it. See our [updating managed accounts guide](/docs/connect/updating-accounts#tos_acceptance)
                for more information
              type:
              - object
              title: tos_acceptance
            transfer_schedule:
              description: Details on when this account will make funds from charges
                available, and when they will be paid out to the account holder's
                bank account. See our [managed account bank transfer guide](/docs/connect/bank-transfers#payout-information)
                for more information
              type:
              - object
              title: transfer_schedule
            business_name:
              description: The publicly sharable name for this account
              type:
              - string
              title: business_name
            business_logo:
              description: ''
              type:
              - string
              title: business_logo
            business_primary_color:
              description: A CSS hex color value representing the primary branding
                color for this account
              type:
              - string
              title: business_primary_color
            business_url:
              description: The URL that best shows the service or product provided
                for this account
              type:
              - string
              title: business_url
            support_url:
              description: A publicly shareable URL that can be reached for support
                for this account
              type:
              - string
              title: support_url
            support_email:
              description: A publicly shareable email address that can be reached
                for support for this account
              type:
              - string
              title: support_email
            support_phone:
              description: A publicly shareable phone number that can be reached for
                support for this account
              type:
              - string
              title: support_phone
            metadata:
              description: A set of key/value pairs that you can attach to an account
                object. It can be useful for storing additional information about
                the account in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/bank_accounts":
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            external_account:
              description: When adding a bank account to a customer, the parameter
                name is `source`. When adding to an account, the parameter name is
                `external_account`. The value can either be a token, like the ones
                returned by [Stripe.js](/docs/stripe.js), or a dictionary containing
                a user's bank account details (with the options shown below).
              type:
              - object
              - string
              title: external_account
            default_for_currency:
              description: If you set this to true (or if this is the first bank account
                being added in this currency) this bank account will become the default
                bank account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: A set of key/value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type:
              - object
              title: metadata
          required:
          - external_account
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateAccountBankAccount
      parameters:
      - description: The ID of the bank account to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_for_currency:
              description: If set to `true`, this bank account will become the default
                external account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/external_accounts":
    get:
      description: ''
      operationId: AllAccountExternalAccounts
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items: {}
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/account/external_accounts
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            external_account:
              description: When adding a bank account to a customer, the parameter
                name is `source`. When adding to an account, the parameter name is
                `external_account`. The value can either be a token, like the ones
                returned by [Stripe.js](/docs/stripe.js), or a dictionary containing
                a user's bank account details (with the options shown below).
              type:
              - object
              - string
              title: external_account
            default_for_currency:
              description: If you set this to true (or if this is the first bank account
                being added in this currency) this bank account will become the default
                bank account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: A set of key/value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type:
              - object
              title: metadata
          required:
          - external_account
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/account/external_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateAccountBankAccount
      parameters:
      - description: The ID of the bank account to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_for_currency:
              description: If set to `true`, this bank account will become the default
                external account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts":
    get:
      description: <p>Returns a list of accounts connected to your platform via <a
        href="/docs/connect">Connect</a>. If you’re not a platform, the list will
        be empty.</p>
      operationId: AllAccount
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/account"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/accounts
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: AccountCreateFromTransferRecipient
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            from_recipient:
              description: ''
              type:
              - string
              title: from_recipient
          required:
          - from_recipient
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account-with-keys"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}":
    delete:
      description: |-
        <p>With <a href="/docs/connect">Connect</a>, you may delete Stripe accounts you manage.</p>

        <p>Managed accounts created using test-mode keys can be deleted at any time. Managed accounts created using live-mode keys may only be deleted once all balances are zero.</p>

        <p>If you are looking to close your own account, use the <a href="http://127.0.0.1:6090/account/data">data tab in your account settings</a> instead.</p>
      operationId: AccountDelete
      parameters:
      - description: The identifier of the account to be deleted. If none is provided,
          will default to the account of the API key.
        in: path
        name: account
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of the account.</p>"
      operationId: AccountRetrieve
      parameters:
      - description: The identifier of the account to be retrieved. If none is provided,
          will default to the account of the API key.
        in: path
        name: account
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: AccountUpdate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_currency:
              description: Three-letter ISO currency code representing the default
                currency for the account. This must be a currency that [Stripe supports
                in the account's country](http://127.0.0.1:8080/questions/which-currencies-does-stripe-support).
              type:
              - string
              title: default_currency
            statement_descriptor:
              description: The text that will appear on credit card statements by
                default if a charge is being made [directly on the account](/docs/connect/payments-fees#charging-directly).
              type:
              - string
              title: statement_descriptor
            transfer_statement_descriptor:
              description: The text that will appear on the account's bank account
                statement for payouts. If not set, this will default to your platform's
                bank descriptor set on the Dashboard.
              type:
              - string
              title: transfer_statement_descriptor
            email:
              description: 'Email address of the account holder. For standalone accounts,
                this is used to email them asking them to claim their Stripe account.
                For managed accounts, this is only to make the account easier to identify
                to you: Stripe will not email the account holder.'
              type:
              - string
              title: email
            product_description:
              description: Internal-only description of the product being sold or
                service being provided by this account. It's used by Stripe for risk
                and underwriting purposes.
              type:
              - string
              title: product_description
            external_account:
              description: A card or bank account to attach to the account. You can
                provide either a token, like the ones returned by [Stripe.js](/docs/stripe.js),
                or a dictionary as documented in the external_account parameter for
                either [card](/docs/api#account_create_card) or [bank account](/docs/api#account_create_bank_account)
                creation. <br><br>This will create a new external account object,
                make it the new default external account for its currency, and delete
                the old default if one exists. If you want to add additional external
                accounts instead of replacing the existing default for this currency,
                use the bank account or card creation API.
              type:
              - object
              - string
              title: external_account
            debit_negative_balances:
              description: A boolean for whether or not Stripe should try to reclaim
                negative balances from the account holder's bank account. See our
                [managed account bank transfer guide](/docs/connect/bank-transfers#negative-balances)
                for more information
              type:
              - boolean
              title: debit_negative_balances
            decline_charge_on:
              description: Account-level settings to automatically decline certain
                types of charges regardless of the bank's decision.
              type:
              - object
              title: decline_charge_on
            legal_entity:
              description: Information about the account holder; varies by [account
                country](#country_spec_object-verification_fields) and [account status](#account_object-verification-fields_needed).
              type:
              - object
              title: legal_entity
            tos_acceptance:
              description: Details on who accepted the Stripe terms of service, and
                when they accepted it. See our [updating managed accounts guide](/docs/connect/updating-accounts#tos_acceptance)
                for more information
              type:
              - object
              title: tos_acceptance
            transfer_schedule:
              description: Details on when this account will make funds from charges
                available, and when they will be paid out to the account holder's
                bank account. See our [managed account bank transfer guide](/docs/connect/bank-transfers#payout-information)
                for more information
              type:
              - object
              title: transfer_schedule
            business_name:
              description: The publicly sharable name for this account
              type:
              - string
              title: business_name
            business_logo:
              description: ''
              type:
              - string
              title: business_logo
            business_primary_color:
              description: A CSS hex color value representing the primary branding
                color for this account
              type:
              - string
              title: business_primary_color
            business_url:
              description: The URL that best shows the service or product provided
                for this account
              type:
              - string
              title: business_url
            support_url:
              description: A publicly shareable URL that can be reached for support
                for this account
              type:
              - string
              title: support_url
            support_email:
              description: A publicly shareable email address that can be reached
                for support for this account
              type:
              - string
              title: support_email
            support_phone:
              description: A publicly shareable phone number that can be reached for
                support for this account
              type:
              - string
              title: support_phone
            metadata:
              description: A set of key/value pairs that you can attach to an account
                object. It can be useful for storing additional information about
                the account in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/bank_accounts":
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            external_account:
              description: When adding a bank account to a customer, the parameter
                name is `source`. When adding to an account, the parameter name is
                `external_account`. The value can either be a token, like the ones
                returned by [Stripe.js](/docs/stripe.js), or a dictionary containing
                a user's bank account details (with the options shown below).
              type:
              - object
              - string
              title: external_account
            default_for_currency:
              description: If you set this to true (or if this is the first bank account
                being added in this currency) this bank account will become the default
                bank account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: A set of key/value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type:
              - object
              title: metadata
          required:
          - external_account
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateAccountBankAccount
      parameters:
      - description: The ID of the bank account to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_for_currency:
              description: If set to `true`, this bank account will become the default
                external account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/external_accounts":
    get:
      description: ''
      operationId: AllAccountExternalAccounts
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items: {}
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/accounts/:account/external_accounts
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateAccountExternalAccount
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            external_account:
              description: When adding a bank account to a customer, the parameter
                name is `source`. When adding to an account, the parameter name is
                `external_account`. The value can either be a token, like the ones
                returned by [Stripe.js](/docs/stripe.js), or a dictionary containing
                a user's bank account details (with the options shown below).
              type:
              - object
              - string
              title: external_account
            default_for_currency:
              description: If you set this to true (or if this is the first bank account
                being added in this currency) this bank account will become the default
                bank account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: A set of key/value pairs that you can attach to an external
                account object. It can be useful for storing additional information
                about the external account in a structured format.
              type:
              - object
              title: metadata
          required:
          - external_account
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/external_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteAccountExternalAccount
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateAccountBankAccount
      parameters:
      - description: The ID of the bank account to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            default_for_currency:
              description: If set to `true`, this bank account will become the default
                external account for its currency.
              type:
              - boolean
              title: default_for_currency
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/external-account-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/accounts/{account}/reject":
    post:
      description: |-
        <p>With <a href="/docs/connect">Connect</a>, you may flag managed accounts as suspicious.</p>

        <p>Managed accounts created using test-mode keys can be rejected at any time. Managed accounts created using live-mode keys may only be rejected once all balances are zero.</p>
      operationId: AccountReject
      parameters:
      - description: The identifier of the account to be rejected.
        in: path
        name: account
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            reason:
              description: The reason for rejecting the account. May be one of `fraud`,
                `terms_of_service`, or `other`.
              type:
              - string
              title: reason
          required:
          - reason
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/apple_pay/domains":
    get:
      description: ''
      operationId: AllApplePayDomains
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: domain_name
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/apple-pay-domain"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/apple_pay/domains
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateApplePayDomain
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            domain_name:
              description: ''
              type:
              - string
              title: domain_name
          required:
          - domain_name
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple-pay-domain"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/apple_pay/domains/{domain}":
    delete:
      description: ''
      operationId: DeleteApplePayDomain
      parameters:
      - description: ''
        in: path
        name: domain
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple-pay-domain"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveApplePayDomain
      parameters:
      - description: ''
        in: path
        name: domain
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple-pay-domain"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/apple_pay/sessions":
    post:
      description: ''
      operationId: CreateApplePaySession
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            validation_url:
              description: ''
              type:
              - string
              title: validation_url
            domain_name:
              description: ''
              type:
              - string
              title: domain_name
            display_name:
              description: ''
              type:
              - string
              title: display_name
          required:
          - validation_url
          - domain_name
          - display_name
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/apple-pay-session"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees":
    get:
      description: "<p>Returns a list of application fees you’ve previously collected.
        The application fees are returned in sorted order, with the most recent fees
        appearing first.</p>"
      operationId: AllPlatformEarnings
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: Only return application fees for the charge specified by this
          charge ID.
        in: query
        name: charge
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/platform-earning"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/application_fees
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{fee}/refunds/{id}":
    get:
      description: ''
      operationId: RetrievePlatformEarningRefund
      parameters:
      - description: ''
        in: path
        name: fee
        required: true
        type: string
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee-refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdatePlatformEarningRefund
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: fee
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee-refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}":
    get:
      description: "<p>Retrieves the details of an application fee that your account
        has collected. The same information is returned when refunding the application
        fee.</p>"
      operationId: RetrievePlatformEarning
      parameters:
      - description: The identifier of the fee to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/platform-earning"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}/refund":
    post:
      description: ''
      operationId: RefundPlatformEarning
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            directive:
              description: ''
              type:
              - string
              title: directive
            amount:
              description: ''
              type:
              - integer
              title: amount
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/platform-earning"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/application_fees/{id}/refunds":
    get:
      description: ''
      operationId: AllPlatformEarningsRefunds
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the application fee whose refunds will be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/fee-refund"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/application_fees/:id/refunds
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreatePlatformEarningRefund
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            directive:
              description: ''
              type:
              - string
              title: directive
            amount:
              description: ''
              type:
              - integer
              title: amount
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/fee-refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance":
    get:
      description: "<p>Retrieves the current account balance, based on the authentication
        that was used to make the request.</p>"
      operationId: BalanceRetrieve
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/balance"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance/history":
    get:
      description: "<p>Returns a list of transactions that have contributed to the
        Stripe account balance (e.g., charges, transfers, and so forth). The transactions
        are returned in sorted order, with the most recent transactions appearing
        first.</p>"
      operationId: AllBalanceTransactions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: For automatic Stripe transfers only, only returns transactions
          that were transferred out on the specified transfer ID.
        in: query
        name: transfer
        required: false
        type: string
      - description: ''
        in: query
        name: available_on
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: 'Only returns transactions of the given type. One of: `charge`,
          `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`,
          or `transfer_failure`'
        in: query
        name: type
        required: false
        type: string
      - description: Only returns the original transaction.
        in: query
        name: source
        required: false
        type: string
      - description: ''
        in: query
        name: currency
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/balance-transaction"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/balance/history
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/balance/history/{id}":
    get:
      description: "<p>Retrieves the balance transaction with the given ID.</p>"
      operationId: RetrieveBalanceTransaction
      parameters:
      - description: The ID of the desired balance transaction (as found on any API
          object that affects the balance, e.g. a charge or transfer).
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/balance-transaction"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/payments/{payment}/refund":
    post:
      description: ''
      operationId: CreatePaymentRefundWithPaymentResponse
      parameters:
      - description: ''
        in: path
        name: payment
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            charge:
              description: ''
              type:
              - string
              title: charge
            amount:
              description: ''
              type:
              - integer
              title: amount
            refund_application_fee:
              description: ''
              type:
              - boolean
              title: refund_application_fee
            metadata:
              description: ''
              type:
              - object
              title: metadata
            description:
              description: ''
              type:
              - string
              title: description
            reason:
              description: ''
              type:
              - string
              title: reason
            reverse_transfer:
              description: ''
              type:
              - boolean
              title: reverse_transfer
            refund_address:
              description: ''
              type:
              - string
              title: refund_address
            directive:
              description: ''
              type:
              - string
              title: directive
          required:
          - charge
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers":
    get:
      description: "<p>Returns a list of your receivers. Receivers are returned sorted
        by creation date, with the most recently created receivers appearing first.</p>"
      operationId: AllReceivers
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Filter for active receivers.
        in: query
        name: active
        required: false
        type: boolean
      - description: Filter for filled receivers.
        in: query
        name: filled
        required: false
        type: boolean
      - description: Filter for receivers with uncaptured funds.
        in: query
        name: uncaptured_funds
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/bitcoin-receiver"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/bitcoin/receivers
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a Bitcoin receiver object that can be used to accept
        bitcoin payments from your customer. The receiver exposes a Bitcoin address
        and is created with a bitcoin to USD exchange rate that is valid for 10 minutes.</p>"
      operationId: CreateReceiver
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            amount:
              description: The amount of `currency` that you will be paid.
              type:
              - integer
              title: amount
            currency:
              description: The currency to which the bitcoin will be converted. You
                will be paid out in this currency. Only USD is currently supported.
              type:
              - string
              title: currency
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: A set of key/value pairs that you can attach to a customer
                object. It can be useful for storing additional information about
                the customer in a structured format.
              type:
              - object
              title: metadata
            email:
              description: The email address of the customer.
              type:
              - string
              title: email
            refund_mispayments:
              description: 'A flag that indicates whether you would like Stripe to
                automatically handle refunds for any [mispayments](/docs/guides/bitcoin#mispayments)
                to the receiver. '
              type:
              - boolean
              title: refund_mispayments
          required:
          - amount
          - currency
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers/{id}":
    delete:
      description: ''
      operationId: DeleteReceiver
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the Bitcoin receiver with the given ID.</p>"
      operationId: RetrieveReceiver
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateReceiver
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            email:
              description: ''
              type:
              - string
              title: email
            refund_address:
              description: ''
              type:
              - string
              title: refund_address
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers/{id}/refund":
    post:
      description: ''
      operationId: RefundReceiver
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            refund_address:
              description: If the receiver does not already have a refund address,
                then you need to provide one to perform a refund.
              type:
              - string
              title: refund_address
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-receiver"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/receivers/{receiver}/transactions":
    get:
      description: ''
      operationId: AllTransactions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return transactions for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: Only return transactions for the receiver specified by this receiver
          ID.
        in: path
        name: receiver
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/bitcoin-transaction"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/bitcoin/receivers/:receiver/transactions
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/transactions":
    get:
      description: ''
      operationId: AllTransactions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return transactions for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: Only return transactions for the receiver specified by this receiver
          ID.
        in: query
        name: receiver
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/bitcoin-transaction"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/bitcoin/transactions
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/bitcoin/transactions/{id}":
    get:
      description: ''
      operationId: RetrieveTransaction
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/bitcoin-transaction"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges":
    get:
      description: "<p>Returns a list of charges you’ve previously created. The charges
        are returned in sorted order, with the most recent charges appearing first.</p>"
      operationId: AllCharges
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return charges for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: ''
        in: query
        name: source
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/charge"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/charges
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateEMVCardPresentCharge
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            transfer:
              description: ''
              type:
              - object
              title: transfer
            destination:
              description: ''
              type:
              - string
              title: destination
            trust:
              description: ''
              type:
              - object
              title: trust
            source:
              description: ''
              type:
              - object
              title: source
            card:
              description: ''
              type:
              - string
              title: card
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            statement_descriptor:
              description: ''
              type:
              - string
              title: statement_descriptor
            capture:
              description: ''
              type:
              - boolean
              title: capture
            application_fee:
              description: ''
              type:
              - integer
              title: application_fee
          required:
          - source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}":
    get:
      description: "<p>Retrieves the details of a charge that has previously been
        created. Supply the unique charge ID that was returned from your previous
        request, and Stripe will return the corresponding charge information. The
        same information is returned when creating or refunding the charge.</p>"
      operationId: RetrieveCharge
      parameters:
      - description: The identifier of the charge to be retrieved.
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the specified charge by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.</p>"
      operationId: UpdateCharge
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            fraud_details:
              description: ''
              type:
              - object
              title: fraud_details
            receipt_email:
              description: ''
              type:
              - string
              title: receipt_email
            level3:
              description: ''
              type:
              - object
              title: level3
            shipping:
              description: ''
              type:
              - object
              title: shipping
            source:
              description: ''
              type:
              - object
              title: source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/capture":
    post:
      description: |-
        <p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href="#create_charge">created a charge</a> with the capture option set to false.</p>

        <p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>
      operationId: ChargeCapture
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: The amount to capture, which must be less than or equal
                to the original amount. Any additional amount will be automatically
                refunded.
              type:
              - integer
              title: amount
            application_fee:
              description: An application fee to add on to this charge. Can only be
                used with Stripe Connect.
              type:
              - integer
              title: application_fee
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to *22 characters*. As an example,
                if your website is `RunClub` and the item you're charging for is a
                race ticket, you may want to specify a `statement_descriptor` of `RunClub
                5K race ticket`. The statement description may not include `<>"'`
                characters, and will appear on your customer's statement in capital
                letters. Non-ASCII characters are automatically stripped. Updating
                this value will overwrite the previous statement descriptor of this
                charge. While most banks display this information consistently, some
                may display it incorrectly or not at all.
              type:
              - string
              title: statement_descriptor
            receipt_email:
              description: The email address to send this charge's receipt to. This
                will override the previously-specified email address for this charge,
                if one was set. Receipts will not be sent in test mode.
              type:
              - string
              title: receipt_email
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/dispute":
    get:
      description: ''
      operationId: RetrieveChargeDispute
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateChargeDispute
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            evidence:
              description: Evidence to upload to respond to a dispute. Updating any
                field in the hash will submit all fields in the hash for review.
              type:
              - object
              title: evidence
            metadata:
              description: A set of key/value pairs that you can attach to a dispute
                object. It can be useful for storing additional information about
                the dispute in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/dispute/close":
    post:
      description: ''
      operationId: CloseChargeDispute
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refund":
    post:
      description: ''
      operationId: CreatePaymentRefundWithPaymentResponse
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: ''
              type:
              - integer
              title: amount
            refund_application_fee:
              description: ''
              type:
              - boolean
              title: refund_application_fee
            metadata:
              description: ''
              type:
              - object
              title: metadata
            description:
              description: ''
              type:
              - string
              title: description
            reason:
              description: ''
              type:
              - string
              title: reason
            reverse_transfer:
              description: ''
              type:
              - boolean
              title: reverse_transfer
            refund_address:
              description: ''
              type:
              - string
              title: refund_address
            directive:
              description: ''
              type:
              - string
              title: directive
            payment:
              description: ''
              type:
              - string
              title: payment
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refunds":
    get:
      description: "<p>You can see a list of the refunds belonging to a specific charge.
        Note that the 10 most recent refunds are always available by default on the
        charge object. If you need more than those 10, you can use this API method
        and the <code>limit</code> and <code>starting_after</code> parameters to page
        through additional refunds.</p>"
      operationId: AllChargeRefunds
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the charge whose refunds will be retrieved.
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/refund"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/charges/:charge/refunds
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateChargeRefund
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: ''
              type:
              - integer
              title: amount
            refund_application_fee:
              description: ''
              type:
              - boolean
              title: refund_application_fee
            reason:
              description: ''
              type:
              - string
              title: reason
            reverse_transfer:
              description: ''
              type:
              - boolean
              title: reverse_transfer
            directive:
              description: ''
              type:
              - string
              title: directive
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refunds/{refund}":
    get:
      description: ''
      operationId: RetrieveChargeRefund
      parameters:
      - description: ''
        in: path
        name: refund
        required: true
        type: string
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateChargeRefund
      parameters:
      - description: ''
        in: path
        name: refund
        required: true
        type: string
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/refunds/{refund}/execute":
    post:
      description: ''
      operationId: ChargeRefundExecute
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: ''
        in: path
        name: refund
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/system-refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/charges/{charge}/settle":
    post:
      description: ''
      operationId: ChargeSettleSystem
      parameters:
      - description: ''
        in: path
        name: charge
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: ''
              type:
              - integer
              title: amount
          required:
          - amount
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/country_specs":
    get:
      description: "<p>Lists all Country Spec objects available in the API.</p>"
      operationId: AllCountrySpecs
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/country-spec"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/country_specs
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/country_specs/{country}":
    get:
      description: "<p>Returns a Country Spec for a given Country code.</p>"
      operationId: RetrieveCountrySpec
      parameters:
      - description: An ISO country code. Available country codes can be listed with
          the <a href="/docs/api#list_country_specs">List Country Specs</a> endpoint.
        in: path
        name: country
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/country-spec"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/coupons":
    get:
      description: "<p>Returns a list of your coupons.</p>"
      operationId: AllCoupons
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/coupon"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/coupons
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: |-
        <p>You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>

        <p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>10</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of 2000 is applied to it and an invoice with a subtotal of <currency>30</currency> will have a final total of <currency>10</currency> if a coupon with an <code>amount_off</code> of 2000 is applied to it.</p>
      operationId: CreateCoupon
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            id:
              description: Unique string of your choice that will be used to identify
                this coupon when applying it to a customer. This is often a specific
                code you'll give to your customer to use when signing up (e.g. *FALL25OFF*).
                If you don't want to specify a particular code, you can leave the
                ID blank and we'll generate a random code for you.
              type:
              - string
              title: id
            percent_off:
              description: A positive integer between 1 and 100 that represents the
                discount the coupon will apply (required if `amount_off` is not passed)
              type:
              - integer
              title: percent_off
            amount_off:
              description: A positive integer representing the amount to subtract
                from an invoice total (required if `percent_off` is not passed)
              type:
              - integer
              title: amount_off
            currency:
              description: Currency of the `amount_off` parameter (required if `amount_off`
                is passed)
              type:
              - string
              title: currency
            duration:
              description: Specifies how long the discount will be in effect. Can
                be `forever`, `once`, or `repeating`.
              type:
              - string
              title: duration
            max_redemptions:
              description: A positive integer specifying the number of times the coupon
                can be redeemed before it's no longer valid. For example, you might
                have a 50% off coupon that the first 20 readers of your blog can use.
              type:
              - integer
              title: max_redemptions
            redeem_by:
              description: Unix timestamp specifying the last time at which the coupon
                can be redeemed. After the redeem_by date, the coupon can no longer
                be applied to new customers.
              type:
              - integer
              title: redeem_by
            duration_in_months:
              description: Required only if `duration` is `repeating`, in which case
                it must be a positive integer that specifies the number of months
                the discount will be in effect.
              type:
              - integer
              title: duration_in_months
            metadata:
              description: A set of key/value pairs that you can attach to a coupon
                object. It can be useful for storing additional information about
                the coupon in a structured format.
              type:
              - object
              title: metadata
          required:
          - duration
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/coupons/{coupon}":
    delete:
      description: <p>You can delete coupons via the <a href="http://127.0.0.1:6090/coupons">coupon
        management</a> page of the Stripe dashboard. However, deleting a coupon does
        not affect any customers who have already applied the coupon; it means that
        new customers can’t redeem the coupon. You can also delete coupons via the
        API.</p>
      operationId: DeleteCoupon
      parameters:
      - description: The identifier of the coupon to be deleted.
        in: path
        name: coupon
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the coupon with the given ID.</p>"
      operationId: RetrieveCoupon
      parameters:
      - description: The ID of the desired coupon.
        in: path
        name: coupon
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the metadata of a coupon. Other coupon details (currency,
        duration, amount_off) are, by design, not editable.</p>"
      operationId: UpdateCoupon
      parameters:
      - description: ID of the coupon to be updated.
        in: path
        name: coupon
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: A set of key/value pairs that you can attach to a coupon
                object. It can be useful for storing additional information about
                the coupon in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/coupon"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers":
    get:
      description: "<p>Returns a list of your customers. The customers are returned
        sorted by creation date, with the most recent customers appearing first.</p>"
      operationId: AllCustomers
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/customer"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new customer object.</p>"
      operationId: CustomerCreateWithPlan
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            plan:
              description: The identifier of the plan to subscribe the customer to.
                If provided, the returned customer object will have a list of subscriptions
                that the customer is currently subscribed to. If you subscribe a customer
                to a plan without a free trial, the customer must have a valid card
                as well.
              type:
              - string
              title: plan
            description:
              description: An arbitrary string that you can attach to a customer object.
                It is displayed alongside the customer in the dashboard.
              type:
              - string
              title: description
            metadata:
              description: A set of key/value pairs that you can attach to a customer
                object. It can be useful for storing additional information about
                the customer in a structured format.
              type:
              - object
              title: metadata
            coupon:
              description: If you provide a coupon code, the customer will have a
                discount applied on all recurring charges. Charges you create through
                the API will not have the discount.
              type:
              - string
              title: coupon
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged. If set, trial_end will
                override the default trial period of the plan the customer is being
                subscribed to. The special value <code>now</code> can be provided
                to end the customer's trial immediately. Only applies when the <code>plan</code>
                parameter is also provided.
              type:
              - integer
              - string
              title: trial_end
            email:
              description: Customer's email address. It's displayed alongside the
                customer in your dashboard and can be useful for searching and tracking.
              type:
              - string
              title: email
            shipping:
              description: ''
              type:
              - object
              title: shipping
            account_balance:
              description: An integer amount in %s that is the starting account balance
                for your customer. A negative amount represents a credit that will
                be used before attempting any charges to the customer's card; a positive
                amount will be added to the next invoice.
              type:
              - integer
              title: account_balance
            business_vat_id:
              description: The customer's VAT identification number. If you are using
                Relay, this field gets passed to tax provider you are using for your
                orders.
              type:
              - string
              title: business_vat_id
            source:
              description: The source can either be a token, like the ones returned
                by our [Stripe.js](/docs/stripe.js), or a dictionary containing a
                user's credit card details (with the options shown below).
              type:
              - object
              - string
              title: source
            quantity:
              description: The quantity you'd like to apply to the subscription you're
                creating (if you pass in a `plan`). For example, if your plan is 10
                %s/user/month, and your customer has 5 users, you could pass 5 as
                the quantity to have the customer charged 50 %s (5 x 10 %s) monthly.
                Defaults to 1 if not set. Only applies when the <code>plan</code>
                parameter is also provided.
              type:
              - integer
              title: quantity
            tax_percent:
              description: A positive decimal (with at most four decimal places) between
                1 and 100. This represents the percentage of the subscription invoice
                subtotal that will be calculated and added as tax to the final amount
                each billing period. For example, a plan which charges $10/month with
                a `tax_percent` of 20.0 will charge $12 per invoice. Can only be used
                if a plan is provided.
              type:
              - number
              title: tax_percent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}":
    delete:
      description: "<p>Permanently deletes a customer. It cannot be undone. Also immediately
        cancels any active subscriptions on the customer.</p>"
      operationId: DeleteCustomer
      parameters:
      - description: The identifier of the customer to be deleted
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing customer. You need only
        supply the unique customer identifier that was returned upon customer creation.</p>"
      operationId: RetrieveCustomer
      parameters:
      - description: The identifier of the customer to be retrieved.
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CustomerUpdateWithPlan
      parameters:
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            plan:
              description: The identifier of the plan to subscribe the customer to.
                If provided, the returned customer object will have a list of subscriptions
                that the customer is currently subscribed to. If you subscribe a customer
                to a plan without a free trial, the customer must have a valid card
                as well.
              type:
              - string
              title: plan
            description:
              description: An arbitrary string that you can attach to a customer object.
                It is displayed alongside the customer in the dashboard.
              type:
              - string
              title: description
            metadata:
              description: A set of key/value pairs that you can attach to a customer
                object. It can be useful for storing additional information about
                the customer in a structured format.
              type:
              - object
              title: metadata
            coupon:
              description: If you provide a coupon code, the customer will have a
                discount applied on all recurring charges. Charges you create through
                the API will not have the discount.
              type:
              - string
              title: coupon
            trial_end:
              description: Unix timestamp representing the end of the trial period
                the customer will get before being charged. If set, trial_end will
                override the default trial period of the plan the customer is being
                subscribed to. The special value <code>now</code> can be provided
                to end the customer's trial immediately. Only applies when the <code>plan</code>
                parameter is also provided.
              type:
              - integer
              - string
              title: trial_end
            email:
              description: Customer's email address. It's displayed alongside the
                customer in your dashboard and can be useful for searching and tracking.
              type:
              - string
              title: email
            shipping:
              description: ''
              type:
              - object
              title: shipping
            account_balance:
              description: An integer amount in %s that is the starting account balance
                for your customer. A negative amount represents a credit that will
                be used before attempting any charges to the customer's card; a positive
                amount will be added to the next invoice.
              type:
              - integer
              title: account_balance
            business_vat_id:
              description: The customer's VAT identification number. If you are using
                Relay, this field gets passed to tax provider you are using for your
                orders.
              type:
              - string
              title: business_vat_id
            source:
              description: The source can either be a token, like the ones returned
                by our [Stripe.js](/docs/stripe.js), or a dictionary containing a
                user's credit card details (with the options shown below).
              type:
              - object
              - string
              title: source
            quantity:
              description: The quantity you'd like to apply to the subscription you're
                creating (if you pass in a `plan`). For example, if your plan is 10
                %s/user/month, and your customer has 5 users, you could pass 5 as
                the quantity to have the customer charged 50 %s (5 x 10 %s) monthly.
                Defaults to 1 if not set. Only applies when the <code>plan</code>
                parameter is also provided.
              type:
              - integer
              title: quantity
            tax_percent:
              description: A positive decimal (with at most four decimal places) between
                1 and 100. This represents the percentage of the subscription invoice
                subtotal that will be calculated and added as tax to the final amount
                each billing period. For example, a plan which charges $10/month with
                a `tax_percent` of 20.0 will charge $12 per invoice. Can only be used
                if a plan is provided.
              type:
              - number
              title: tax_percent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/alipay_accounts":
    get:
      description: ''
      operationId: AllCustomerAlipayAccounts
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose Alipay accounts will be retrieved
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/alipay-account"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers/:customer/alipay_accounts
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            source:
              description: When adding a card to a customer, the parameter name is
                `source`. When adding to an account, the parameter name is `external_account`.
                The value can either be a token, like the ones returned by our [Stripe.js](/docs/stripe.js),
                or a dictionary containing a user's credit card details (with the
                options shown below). Stripe will automatically validate the card.
              type:
              - object
              - string
              title: source
            validate:
              description: Only applicable on accounts (not customers or recipients).
                If you set this to `true` (or if this is the first external account
                being added in this currency) this card will become the default external
                account for its currency.
              type:
              - boolean
              title: validate
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type:
              - object
              title: metadata
          required:
          - source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/alipay_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerAlipayAccount
      parameters:
      - description: The ID of the Alipay account to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/alipay-account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts":
    get:
      description: ''
      operationId: AllCustomerBankAccounts
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose bank accounts will be retrieved
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/payment-bank-account"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers/:customer/bank_accounts
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            source:
              description: When adding a card to a customer, the parameter name is
                `source`. When adding to an account, the parameter name is `external_account`.
                The value can either be a token, like the ones returned by our [Stripe.js](/docs/stripe.js),
                or a dictionary containing a user's credit card details (with the
                options shown below). Stripe will automatically validate the card.
              type:
              - object
              - string
              title: source
            validate:
              description: Only applicable on accounts (not customers or recipients).
                If you set this to `true` (or if this is the first external account
                being added in this currency) this card will become the default external
                account for its currency.
              type:
              - boolean
              title: validate
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type:
              - object
              title: metadata
          required:
          - source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerBankAccount
      parameters:
      - description: ID of bank account to retrieve
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-bank-account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerCard
      parameters:
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            exp_year:
              description: ''
              type:
              - string
              title: exp_year
            exp_month:
              description: ''
              type:
              - string
              title: exp_month
            name:
              description: ''
              type:
              - string
              title: name
            address_line1:
              description: ''
              type:
              - string
              title: address_line1
            address_line2:
              description: ''
              type:
              - string
              title: address_line2
            address_city:
              description: ''
              type:
              - string
              title: address_city
            address_zip:
              description: ''
              type:
              - string
              title: address_zip
            address_state:
              description: ''
              type:
              - string
              title: address_state
            address_country:
              description: ''
              type:
              - string
              title: address_country
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/bank_accounts/{id}/verify":
    post:
      description: ''
      operationId: VerifyCustomerSource
      parameters:
      - description: The ID of the source to be verified
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            verification_method:
              description: ''
              type:
              - string
              title: verification_method
            amounts:
              description: Two positive integers in <strong>cents</strong> equal to
                the values of the microdeposits sent to the bank account
              type:
              - array
              title: amounts
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-bank-account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/cards":
    get:
      description: ''
      operationId: AllCustomerCards
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose cards will be retrieved
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/payment-card"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers/:customer/cards
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            source:
              description: When adding a card to a customer, the parameter name is
                `source`. When adding to an account, the parameter name is `external_account`.
                The value can either be a token, like the ones returned by our [Stripe.js](/docs/stripe.js),
                or a dictionary containing a user's credit card details (with the
                options shown below). Stripe will automatically validate the card.
              type:
              - object
              - string
              title: source
            validate:
              description: Only applicable on accounts (not customers or recipients).
                If you set this to `true` (or if this is the first external account
                being added in this currency) this card will become the default external
                account for its currency.
              type:
              - boolean
              title: validate
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type:
              - object
              title: metadata
          required:
          - source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/cards/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerCard
      parameters:
      - description: The ID of the card to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerCard
      parameters:
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            exp_year:
              description: ''
              type:
              - string
              title: exp_year
            exp_month:
              description: ''
              type:
              - string
              title: exp_month
            name:
              description: ''
              type:
              - string
              title: name
            address_line1:
              description: ''
              type:
              - string
              title: address_line1
            address_line2:
              description: ''
              type:
              - string
              title: address_line2
            address_city:
              description: ''
              type:
              - string
              title: address_city
            address_zip:
              description: ''
              type:
              - string
              title: address_zip
            address_state:
              description: ''
              type:
              - string
              title: address_state
            address_country:
              description: ''
              type:
              - string
              title: address_country
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteCustomerDiscount
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerDiscount
      parameters:
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources":
    get:
      description: ''
      operationId: AllCustomerSources
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose sources will be retrieved
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items: {}
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers/:customer/sources
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateCustomerSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            source:
              description: When adding a card to a customer, the parameter name is
                `source`. When adding to an account, the parameter name is `external_account`.
                The value can either be a token, like the ones returned by our [Stripe.js](/docs/stripe.js),
                or a dictionary containing a user's credit card details (with the
                options shown below). Stripe will automatically validate the card.
              type:
              - object
              - string
              title: source
            validate:
              description: Only applicable on accounts (not customers or recipients).
                If you set this to `true` (or if this is the first external account
                being added in this currency) this card will become the default external
                account for its currency.
              type:
              - boolean
              title: validate
            metadata:
              description: A set of key/value pairs that you can attach to a card
                object. It can be useful for storing additional information about
                the card in a structured format.
              type:
              - object
              title: metadata
          required:
          - source
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources/{id}":
    delete:
      description: ''
      operationId: DeleteCustomerSource
      parameters:
      - description: The ID of the source to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerSource
      parameters:
      - description: The ID of the source to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/customer-source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateCustomerCard
      parameters:
      - description: The ID of the card to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            exp_year:
              description: ''
              type:
              - string
              title: exp_year
            exp_month:
              description: ''
              type:
              - string
              title: exp_month
            name:
              description: ''
              type:
              - string
              title: name
            address_line1:
              description: ''
              type:
              - string
              title: address_line1
            address_line2:
              description: ''
              type:
              - string
              title: address_line2
            address_city:
              description: ''
              type:
              - string
              title: address_city
            address_zip:
              description: ''
              type:
              - string
              title: address_zip
            address_state:
              description: ''
              type:
              - string
              title: address_state
            address_country:
              description: ''
              type:
              - string
              title: address_country
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/sources/{id}/verify":
    post:
      description: ''
      operationId: VerifyCustomerSource
      parameters:
      - description: The ID of the source to be verified
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            verification_method:
              description: ''
              type:
              - string
              title: verification_method
            amounts:
              description: Two positive integers in <strong>cents</strong> equal to
                the values of the microdeposits sent to the bank account
              type:
              - array
              title: amounts
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/payment-bank-account"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions":
    get:
      description: "<p>You can see a list of the customer’s active subscriptions.
        Note that the 10 most recent active subscriptions are always available by
        default on the customer object. If you need more than those 10, you can use
        the limit and starting_after parameters to page through additional subscriptions.</p>"
      operationId: AllCustomerSubscriptions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose subscriptions will be retrieved
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/subscription"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/customers/:customer/subscriptions
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Creates a new subscription on an existing customer.</p>"
      operationId: CreateCustomerSubscription
      parameters:
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            plan:
              description: ''
              type:
              - string
              title: plan
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            trial_period_days:
              description: ''
              type:
              - integer
              title: trial_period_days
            trial_end:
              description: ''
              type:
              - integer
              - string
              title: trial_end
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            application_fee_percent:
              description: ''
              type:
              - number
              title: application_fee_percent
            coupon:
              description: ''
              type:
              - string
              title: coupon
            source:
              description: ''
              type:
              - object
              - string
              title: source
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_percent:
              description: ''
              type:
              - number
              title: tax_percent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}":
    delete:
      description: |-
        <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to true, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. By default, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription. Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at period end, any pending prorations will also be left in place and collected at the end of the period, but if the subscription is set to cancel immediately, pending prorations will be removed.</p>

        <p>By default, all unpaid invoices for the customer will be closed upon subscription cancellation. We do this in order to prevent unexpected payment retries once the customer has canceled a subscription. However, you can reopen the invoices manually after subscription cancellation to have us proceed with automatic retries, or you could even re-attempt payment yourself on all unpaid invoices before allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteCustomerSubscription
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            at_period_end:
              description: A flag that if set to true will delay the cancellation
                of the subscription until the end of the current period.
              type:
              - boolean
              title: at_period_end
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates an existing subscription on a customer to match the
        specified parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes.</p>"
      operationId: UpdateCustomerSubscription
      parameters:
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            plan:
              description: ''
              type:
              - string
              title: plan
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            proration_date:
              description: ''
              type:
              - integer
              title: proration_date
            trial_end:
              description: ''
              type:
              - integer
              - string
              title: trial_end
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            application_fee_percent:
              description: ''
              type:
              - number
              title: application_fee_percent
            source:
              description: ''
              type:
              - object
              - string
              title: source
            coupon:
              description: ''
              type:
              - string
              title: coupon
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_percent:
              description: ''
              type:
              - number
              title: tax_percent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteCustomerDiscount
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveCustomerDiscount
      parameters:
      - description: ''
        in: path
        name: customer
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes":
    get:
      description: "<p>Returns a list of your disputes.</p>"
      operationId: AllDisputes
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/dispute"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/disputes
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes/{dispute}":
    get:
      description: "<p>Retrieves the dispute with the given ID.</p>"
      operationId: RetrieveDispute
      parameters:
      - description: ID of dispute to retrieve.
        in: path
        name: dispute
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: |-
        <p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence in order to help us resolve the dispute in your favor. You can do this in your <a href="http://127.0.0.1:6090/disputes">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>

        <p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. You may want to consult our <a href="http://127.0.0.1:6040/help/dispute-types">guide to dispute types</a> to help you figure out which evidence fields to provide.</p>
      operationId: UpdateDispute
      parameters:
      - description: ID of the dispute to update.
        in: path
        name: dispute
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            evidence:
              description: Evidence to upload to respond to a dispute. Updating any
                field in the hash will submit all fields in the hash for review.
              type:
              - object
              title: evidence
            metadata:
              description: A set of key/value pairs that you can attach to a dispute
                object. It can be useful for storing additional information about
                the dispute in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/disputes/{dispute}/close":
    post:
      description: |-
        <p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially ‘dismissing’ the dispute, acknowledging it as lost</p>

        <p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <strong>Closing a dispute is irreversible</strong>.</p>
      operationId: CloseDispute
      parameters:
      - description: ID of dispute to close.
        in: path
        name: dispute
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/dispute"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events":
    get:
      description: "<p>List events, going back up to 30 days.</p>"
      operationId: AllEvents
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: A string containing a specific event name, or group of events
          using * as a wildcard. The list will be filtered to include only events
          with a matching event property.
        in: query
        name: type
        required: false
        type: string
      - description: An array of up to 20 strings containing specific event names.
          The list will be filtered to include only events with a matching event property.
          You may pass either `type` or `types`, but not both.
        in: query
        name: types
        required: false
        type: array
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/event"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/events
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events/{id}":
    get:
      description: "<p>Retrieves the details of an event. Supply the unique identifier
        of the event, which you might have received in a webhook.</p>"
      operationId: RetrieveEvent
      parameters:
      - description: The identifier of the event to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/event"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/events/{id}/retry":
    post:
      description: "<p>Resend an event. This only works in testmode</p>"
      operationId: RetryEvent
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/event"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoiceitems":
    get:
      description: "<p>Returns a list of your invoice items. Invoice items are returned
        sorted by creation date, with the most recently created invoice items appearing
        first.</p>"
      operationId: AllInvoiceItems
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The identifier of the customer whose invoice items to return.
          If none is provided, all invoice items will be returned.
        in: query
        name: customer
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/invoice-item"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/invoiceitems
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Adds an arbitrary charge or credit to the customer’s upcoming
        invoice.</p>"
      operationId: CreateInvoiceItem
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            customer:
              description: The ID of the customer who will be billed when this invoice
                item is billed.
              type:
              - string
              title: customer
            amount:
              description: The integer amount in cents of the charge to be applied
                to the upcoming invoice. If you want to apply a credit to the customer's
                account, pass a negative amount.
              type:
              - integer
              title: amount
            currency:
              description: 3-letter [ISO code for currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).
              type:
              - string
              title: currency
            description:
              description: An arbitrary string which you can attach to the invoice
                item. The description is displayed in the invoice for easy tracking.
              type:
              - string
              title: description
            metadata:
              description: A set of key/value pairs that you can attach to an invoice
                item object. It can be useful for storing additional information about
                the invoice item in a structured format.
              type:
              - object
              title: metadata
            invoice:
              description: The ID of an existing invoice to add this invoice item
                to. When left blank, the invoice item will be added to the next upcoming
                scheduled invoice. Use this when adding invoice items in response
                to an invoice.created webhook. You cannot add an invoice item to an
                invoice that has already been paid, attempted or closed.
              type:
              - string
              title: invoice
            subscription:
              description: The ID of a subscription to add this invoice item to. When
                left blank, the invoice item will be be added to the next upcoming
                scheduled invoice. When set, scheduled invoices for subscriptions
                other than the specified subscription will ignore the invoice item.
                Use this when you want to express that an invoice item has been accrued
                within the context of a particular subscription.
              type:
              - string
              title: subscription
            discountable:
              description: Controls whether discounts apply to this invoice item.
                Defaults to false for prorations or negative invoice items, and true
                for all other invoice items.
              type:
              - boolean
              title: discountable
          required:
          - customer
          - amount
          - currency
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoiceitems/{invoiceitem}":
    delete:
      description: "<p>Removes an invoice item from the upcoming invoice. Removing
        an invoice item is only possible before the invoice it’s attached to is closed.</p>"
      operationId: DeleteInvoiceItem
      parameters:
      - description: The identifier of the invoice item to be deleted.
        in: path
        name: invoiceitem
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the invoice item with the given ID.</p>"
      operationId: RetrieveInvoiceItem
      parameters:
      - description: The ID of the desired invoice item.
        in: path
        name: invoiceitem
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the amount or description of an invoice item on an
        upcoming invoice. Updating an invoice item is only possible before the invoice
        it’s attached to is closed.</p>"
      operationId: UpdateInvoiceItem
      parameters:
      - description: ''
        in: path
        name: invoiceitem
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: ''
              type:
              - integer
              title: amount
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            currency:
              description: ''
              type:
              - string
              title: currency
            discountable:
              description: ''
              type:
              - boolean
              title: discountable
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices":
    get:
      description: "<p>You can list all invoices, or list the invoices for a specific
        customer. The invoices are returned sorted by creation date, with the most
        recently created invoices appearing first.</p>"
      operationId: AllInvoices
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The identifier of the customer whose invoices to return. If none
          is provided, all invoices will be returned.
        in: query
        name: customer
        required: false
        type: string
      - description: ''
        in: query
        name: date
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/invoice"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/invoices
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: |-
        <p>If you need to invoice your customer outside the regular billing cycle, you can create an invoice that pulls in all pending invoice items, including prorations. The customer’s billing cycle and regular subscription won’t be affected.</p>

        <p>Once you create the invoice, it’ll be picked up and paid automatically, though you can choose to <a href="#pay_invoice">pay it right</a> away.</p>
      operationId: CreateInvoice
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            customer:
              description: ''
              type:
              - string
              title: customer
            application_fee:
              description: A fee in %s that will be applied to the invoice and transferred
                to the application owner's Stripe account. The request must be made
                with an OAuth key or the Stripe-Account header in order to take an
                application fee. For more information, see the application fees [documentation](/docs/connect/collecting-fees#subscriptions).
              type:
              - integer
              title: application_fee
            subscription:
              description: The ID of the subscription to invoice. If not set, the
                created invoice will include all pending invoice items for the customer.
                If set, the created invoice will exclude pending invoice items that
                pertain to other subscriptions.
              type:
              - string
              title: subscription
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            statement_descriptor:
              description: Extra information about a charge for the customer's credit
                card statement.
              type:
              - string
              title: statement_descriptor
            tax_percent:
              description: 'The percent tax rate applied to the invoice, represented
                as a decimal number. '
              type:
              - number
              title: tax_percent
          required:
          - customer
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/upcoming":
    get:
      description: |-
        <p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.</p>

        <p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>

        <p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>
      operationId: RetrieveCustomerUpcomingInvoice
      parameters:
      - description: The identifier of the customer whose upcoming invoice you'd like
          to retrieve.
        in: query
        name: customer
        required: true
        type: string
      - description: The identifier of the subscription for which you'd like to retrieve
          the upcoming invoice. If not provided, but a `subscription_plan` is provided,
          you will preview creating a subscription to that plan. If neither `subscription`
          nor `subscription_plan` is provided, you will retrieve the next upcoming
          invoice from among the customer's subscriptions.
        in: query
        name: subscription
        required: false
        type: string
      - description: If set, the invoice returned will preview updating the subscription
          given to this plan, or creating a new subscription to this plan if no `subscription`
          is given.
        in: query
        name: subscription_plan
        required: false
        type: string
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that quantity. If set, one of `subscription_plan` or
          `subscription` is required.
        in: query
        name: subscription_quantity
        required: false
        type: integer
      - description: If previewing an update to a subscription, this decides whether
          the preview will show the result of applying prorations or not. If set,
          one of `subscription_plan` or `subscription`, and one of `subscription_plan`,
          `subscription_quantity` or `subscription_trial_end` are required.
        in: query
        name: subscription_prorate
        required: false
        type: boolean
      - description: If previewing an update to a subscription, and doing proration,
          `subscription_proration_date` forces the proration to be calculated as though
          the update was done at the specified time. The time given must be within
          the current subscription period, and cannot be before the subscription was
          on its current plan.If set, `subscription`, and one of `subscription_plan`,
          `subscription_quantity` or `subscription_trial_end` are required. Also,
          `subscription_proration` cannot be set to false.
        in: query
        name: subscription_proration_date
        required: false
        type: integer
      - description: If provided, the invoice returned will preview updating or creating
          a subscription with that trial end. If set, one of `subscription_plan` or
          `subscription` is required.
        in: query
        name: subscription_trial_end
        required: false
        type: integer
      - description: The code of the coupon to apply. If a `subscription` or `subscription_plan`
          is provided, the invoice returned will preview updating or creating a subscription
          with that coupon. Otherwise, it will preview applying that coupon to the
          customer for the next upcoming invoice from among the customer's subscriptions.
        in: query
        name: coupon
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/upcoming-invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}":
    get:
      description: "<p>Retrieves the invoice with the given ID.</p>"
      operationId: RetrieveInvoice
      parameters:
      - description: The identifier of the desired invoice.
        in: path
        name: invoice
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Until an invoice is paid, it is marked as open (closed=false).
        If you’d like to stop Stripe from automatically attempting payment on an invoice
        or would simply like to close the invoice out as no longer owed by the customer,
        you can update the closed parameter.</p>"
      operationId: UpdateInvoice
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            closed:
              description: Boolean representing whether an invoice is closed or not.
                To close an invoice, pass true.
              type:
              - boolean
              title: closed
            forgiven:
              description: Boolean representing whether an invoice is forgiven or
                not. To forgive an invoice, pass true. Forgiving an invoice instructs
                us to update the subscription status as if the invoice were successfully
                paid. Once an invoice has been forgiven, it cannot be unforgiven or
                reopened.
              type:
              - boolean
              title: forgiven
            application_fee:
              description: A fee in %s that will be applied to the invoice and transferred
                to the application owner's Stripe account. The request must be made
                with an OAuth key or the Stripe-Account header in order to take an
                application fee. For more information, see the application fees [documentation](/docs/connect/collecting-fees#subscriptions).
              type:
              - integer
              title: application_fee
            metadata:
              description: ''
              type:
              - object
              title: metadata
            description:
              description: ''
              type:
              - string
              title: description
            statement_descriptor:
              description: Extra information about a charge for the customer's credit
                card statement.
              type:
              - string
              title: statement_descriptor
            tax_percent:
              description: The percent tax rate applied to the invoice, represented
                as a decimal number. The tax rate of an attempted, paid or forgiven
                invoice cannot be changed.
              type:
              - number
              title: tax_percent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}/lines":
    get:
      description: "<p>When retrieving an invoice, you’ll get a lines property containing
        the total count of line items and the first handful of those items. There
        is also a URL where you can retrieve the full (paginated) list of line items.</p>"
      operationId: AllInvoiceLines
      parameters:
      - description: The maximum number of line items to return
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The id of the invoice containing the lines to be retrieved
        in: path
        name: invoice
        required: true
        type: string
      - description: In the case of upcoming invoices, the customer of the upcoming
          invoice is required. In other cases it is ignored.
        in: query
        name: customer
        required: false
        type: string
      - description: In the case of upcoming invoices, the subscription of the upcoming
          invoice is optional. In other cases it is ignored.
        in: query
        name: subscription
        required: false
        type: string
      - description: ''
        in: query
        name: subscription_plan
        required: false
        type: string
      - description: ''
        in: query
        name: subscription_quantity
        required: false
        type: integer
      - description: ''
        in: query
        name: subscription_prorate
        required: false
        type: boolean
      - description: ''
        in: query
        name: subscription_proration_date
        required: false
        type: integer
      - description: ''
        in: query
        name: subscription_trial_end
        required: false
        type: integer
      - description: ''
        in: query
        name: coupon
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/invoice-line-item"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/invoices/:invoice/lines
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/invoices/{invoice}/pay":
    post:
      description: <p>Stripe automatically creates and then attempts to pay invoices
        for customers on subscriptions. We’ll also retry unpaid invoices according
        to your <a href="http://127.0.0.1:6090/account/recurring">retry settings</a>.
        However, if you’d like to attempt to collect payment on an invoice out of
        the normal retry schedule or for some other reason, you can do so.</p>
      operationId: PayInvoice
      parameters:
      - description: ID of invoice to pay.
        in: path
        name: invoice
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/invoice"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/order_returns":
    get:
      description: "<p>Returns a list of your order returns. The returns are returned
        sorted by creation date, with the most recently created return appearing first.</p>"
      operationId: AllOrderReturns
      parameters:
      - description: The order to retrieve returns for.
        in: query
        name: order
        required: false
        type: string
      - description: Date this return was created
        in: query
        name: created
        required: false
        type: integer
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/order-return"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/order_returns
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/order_returns/{id}":
    get:
      description: "<p>Retrieves the details of an existing order return. Supply the
        unique order ID from either an order return creation request or the order
        return list, and Stripe will return the corresponding order information.</p>"
      operationId: RetrieveOrderReturn
      parameters:
      - description: The identifier of the order return to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order-return"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders":
    get:
      description: "<p>Returns a list of your orders. The orders are returned sorted
        by creation date, with the most recently created orders appearing first.</p>"
      operationId: AllOrders
      parameters:
      - description: Only return orders that have the given status. One of `created`,
          `paid`, `fulfilled`, or `refunded`.
        in: query
        name: status
        required: false
        type: string
      - description: Only return orders with the given IDs
        in: query
        name: ids
        required: false
        type: array
      - description: Only return orders for the given customer
        in: query
        name: customer
        required: false
        type: string
      - description: Date this order was created
        in: query
        name: created
        required: false
        type: integer
      - description: Only return orders with the given upstream order IDs
        in: query
        name: upstream_ids
        required: false
        type: array
      - description: Filter orders based on when they were paid, fulfilled, canceled,
          or returned
        in: query
        name: status_transitions
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/order"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/orders
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateOrder
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            items:
              description: List of items constituting the order.
              type:
              - object
              - array
              - string
              title: items
            customer:
              description: The ID of an existing customer to use for this order. If
                provided, the customer email and shipping address will be used to
                create the order. Subsequently, the customer will also be charged
                to pay the order. If `email` or `shipping` are also provided, they
                will override the values retrieved from the customer object.
              type:
              - string
              title: customer
            shipping:
              description: Shipping address for the order. Required if any of the
                SKUs are for products that have `shippable` set to true.
              type:
              - object
              title: shipping
            email:
              description: The email address of the customer placing the order.
              type:
              - string
              title: email
            currency:
              description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
                representing the currency in which the order should be made. Stripe
                will validate that all entries in `items` match the currency specified
                here.
              type:
              - string
              title: currency
            metadata:
              description: A set of key/value pairs that you can attach to an order
                object. It can be useful for storing additional information about
                the order in a structured format.
              type:
              - object
              title: metadata
            coupon:
              description: A coupon code that represents a discount to be applied
                to this order. Must be one-time duration and in same currency as the
                order.
              type:
              - string
              title: coupon
          required:
          - currency
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}":
    get:
      description: "<p>Retrieves the details of an existing order. Supply the unique
        order ID from either an order creation request or the order list, and Stripe
        will return the corresponding order information.</p>"
      operationId: RetrieveOrder
      parameters:
      - description: The identifier of the order to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateOrder
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            status:
              description: Current order status. One of `created`, `paid`, `canceled`,
                `fulfilled`, or `returned`. More detail in the [Relay API Overview](/docs/orders/guide#understanding-order-statuses).
              type:
              - string
              title: status
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the order in a structured format.
              type:
              - object
              title: metadata
            coupon:
              description: A coupon code that represents a discount to be applied
                to this order. Must be one-time duration and in same currency as the
                order.
              type:
              - string
              title: coupon
            selected_shipping_method:
              description: The shipping method to select for fulfilling this order.
                If specified, must be one of the `id`s of a shipping method in the
                `shipping_methods` array. If specified, will overwrite the existing
                selected shipping method, updating `items` as necessary.
              type:
              - string
              title: selected_shipping_method
            shipping:
              description: Tracking information once the order has been fulfilled.
              type:
              - object
              title: shipping
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}/pay":
    post:
      description: ''
      operationId: PayOrder
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            source:
              description: The source can either be a token, like the ones returned
                by our [Stripe.js](/docs/stripe.js), or a dictionary containing a
                user's credit card details (with the options shown below). Whenever
                you create a new card for a customer, Stripe will automatically validate
                the card. If no customer was attached to the order at creation, either
                `source` or `customer is required. Otherwise, the specified source
                will be charged intead of the customer attached to the order.
              type:
              - object
              - string
              title: source
            customer:
              description: The ID of an existing customer that will be charged for
                this order. If no customer was attached to the order at creation,
                either `source` or `customer` is required. Otherwise, the specified
                customer will be charged instead of the one attached to the order.
              type:
              - string
              title: customer
            metadata:
              description: A set of key/value pairs that you can attach to an order
                object. It can be useful for storing additional information about
                the order in a structured format.
              type:
              - object
              title: metadata
            email:
              description: The email address of the customer placing the order. Required
                if not previously specified for the order.
              type:
              - string
              title: email
            shipping_method:
              description: ''
              type:
              - string
              title: shipping_method
            application_fee:
              description: ''
              type:
              - integer
              title: application_fee
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/orders/{id}/returns":
    post:
      description: "<p>Return all or part of an order. The order must have a status
        of <code>paid</code> or <code>fulfilled</code> before it can be returned.
        Once all items have been returned, the order will become <code>canceled</code>
        or <code>returned</code> depending on which status the order started in.</p>"
      operationId: CreateOrderReturn
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            items:
              description: List of items to return.
              type:
              - object
              - array
              title: items
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/order-return"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payments":
    get:
      description: ''
      operationId: AllPayments
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return payments for the customer specified by this customer
          ID.
        in: query
        name: customer
        required: false
        type: string
      - description: ''
        in: query
        name: transfer_group
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/charge"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/payments
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/payments/{payment}":
    get:
      description: ''
      operationId: RetrievePayment
      parameters:
      - description: ''
        in: path
        name: payment
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/charge"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/plans":
    get:
      description: "<p>Returns a list of your plans.</p>"
      operationId: AllPlans
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/plan"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/plans
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: <p>You can create plans easily via the <a href="https://dashboard.stripe.com/plans">plan
        management</a> page of the Stripe dashboard. Plan creation is also accessible
        via the API if you need to create plans on the fly.</p>
      operationId: CreatePlan
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            id:
              description: Unique string of your choice that will be used to identify
                this plan when subscribing a customer. This could be an identifier
                like "gold" or a primary key from your own database.
              type:
              - string
              title: id
            amount:
              description: A positive integer in **%s** (or 0 for a free plan) representing
                how much to charge (on a recurring basis).
              type:
              - integer
              title: amount
            currency:
              description: 3-letter [ISO code for currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).
              type:
              - string
              title: currency
            name:
              description: Name of the plan, to be displayed on invoices and in the
                web interface.
              type:
              - string
              title: name
            interval:
              description: Specifies billing frequency. Either day, week, month or
                year.
              type:
              - string
              title: interval
            metadata:
              description: A set of key/value pairs that you can attach to a plan
                object. It can be useful for storing additional information about
                the plan in a structured format.
              type:
              - object
              title: metadata
            interval_count:
              description: The number of intervals between each subscription billing.
                For example, `interval=month` and `interval_count=3` bills every 3
                months. Maximum of one year interval allowed (1 year, 12 months, or
                52 weeks).
              type:
              - integer
              title: interval_count
            trial_period_days:
              description: Specifies a trial period in (an integer number of) days.
                If you include a trial period, the customer won't be billed for the
                first time until the trial period ends. If the customer cancels before
                the trial period is over, she'll never be billed at all.
              type:
              - integer
              title: trial_period_days
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to **22 characters**. As an
                example, if your website is `RunClub` and the item you're charging
                for is your Silver Plan, you may want to specify a `statement_descriptor`
                of `RunClub Silver Plan`. The statement description may not include
                `<>"'` characters, and will appear on your customer's statement in
                capital letters. Non-ASCII characters are automatically stripped.
                While most banks display this information consistently, some may display
                it incorrectly or not at all.
              type:
              - string
              title: statement_descriptor
          required:
          - id
          - amount
          - currency
          - name
          - interval
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/plans/{plan}":
    delete:
      description: <p>You can delete plans via the <a href="http://127.0.0.1:6090/plans">plan
        management</a> page of the Stripe dashboard. However, deleting a plan does
        not affect any current subscribers to the plan; it merely means that new subscribers
        can’t be added to that plan. You can also delete plans via the API.</p>
      operationId: DeletePlan
      parameters:
      - description: The identifier of the plan to be deleted.
        in: path
        name: plan
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the plan with the given ID.</p>"
      operationId: RetrievePlan
      parameters:
      - description: The ID of the desired plan.
        in: path
        name: plan
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the name of a plan. Other plan details (price, interval,
        etc.) are, by design, not editable.</p>"
      operationId: UpdatePlan
      parameters:
      - description: The identifier of the plan to be updated.
        in: path
        name: plan
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            name:
              description: Name of the plan, to be displayed on invoices and in the
                web interface.
              type:
              - string
              title: name
            statement_descriptor:
              description: An arbitrary string to be displayed on your customer's
                credit card statement. This may be up to **22 characters**. As an
                example, if your website is `RunClub` and the item you're charging
                for is your Silver Plan, you may want to specify a `statement_descriptor`
                of `RunClub Silver Plan`. The statement description may not include
                `<>"'` characters, and will appear on your customer's statement in
                capital letters. Non-ASCII characters are automatically stripped.
                While most banks display this information consistently, some may display
                it incorrectly or not at all.
              type:
              - string
              title: statement_descriptor
            metadata:
              description: A set of key/value pairs that you can attach to a plan
                object. It can be useful for storing additional information about
                the plan in a structured format.
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/plan"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/products":
    get:
      description: "<p>Returns a list of your products. The products are returned
        sorted by creation date, with the most recently created products appearing
        first.</p>"
      operationId: AllProducts
      parameters:
      - description: Only return products that are active or inactive (e.g. pass `false`
          to list all inactive products).
        in: query
        name: active
        required: false
        type: boolean
      - description: Only return products with the given IDs.
        in: query
        name: ids
        required: false
        type: array
      - description: Only return products that can be shipped (i.e., physical, not
          digital products).
        in: query
        name: shippable
        required: false
        type: boolean
      - description: Only return products with the given url
        in: query
        name: url
        required: false
        type: string
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/product"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/products
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateProduct
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            id:
              description: The identifier for the product. Must be unique. If not
                provided, an identifier will be randomly generated.
              type:
              - string
              title: id
            name:
              description: The product's name, meant to be displayable to the customer.
              type:
              - string
              title: name
            caption:
              description: A short one-line description of the product, meant to be
                displayable to the customer.
              type:
              - string
              title: caption
            description:
              description: The product's description, meant to be displayable to the
                customer.
              type:
              - string
              title: description
            attributes:
              description: A list of up to 5 alphanumeric attributes that each SKU
                can provide values for (e.g. `["color", "size"]`).
              type:
              - array
              title: attributes
            shippable:
              description: Whether this product is shipped (i.e. physical goods).
                Defaults to `true`.
              type:
              - boolean
              title: shippable
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the product in a structured format.
              type:
              - object
              title: metadata
            active:
              description: Whether or not the product is currently available for purchase.
                Defaults to `true`.
              type:
              - boolean
              title: active
            url:
              description: A URL of a publicly-accessible webpage for this product.
              type:
              - string
              title: url
            package_dimensions:
              description: The dimensions of this product for shipping purposes. A
                SKU associated with this product can override this value by having
                its own `package_dimensions`
              type:
              - object
              title: package_dimensions
            images:
              description: A list of up to 8 URLs of images for this product, meant
                to be displayable to the customer.
              type:
              - array
              title: images
            deactivate_on:
              description: An array of Connect application names or identifiers that
                should not be able to order the SKUs for this product.
              type:
              - array
              title: deactivate_on
          required:
          - name
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/products/{id}":
    delete:
      description: ''
      operationId: DeleteProduct
      parameters:
      - description: The ID of the product to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing product. Supply the unique
        product ID from either a product creation request or the product list, and
        Stripe will return the corresponding product information.</p>"
      operationId: RetrieveProduct
      parameters:
      - description: The identifier of the product to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateProduct
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            name:
              description: The product's name, meant to be displayable to the customer.
              type:
              - string
              title: name
            description:
              description: The product's description, meant to be displayable to the
                customer.
              type:
              - string
              title: description
            caption:
              description: A short one-line description of the product, meant to be
                displayable to the customer.
              type:
              - string
              title: caption
            shippable:
              description: Whether this product is shipped (i.e. physical goods).
                Defaults to `true`.
              type:
              - boolean
              title: shippable
            active:
              description: Whether or not the product is available for purchase.
              type:
              - boolean
              title: active
            metadata:
              description: A set of key/value pairs that you can attach to a product
                object. It can be useful for storing additional information about
                the product in a structured format.
              type:
              - object
              title: metadata
            url:
              description: A URL of a publicly-accessible webpage for this product.
              type:
              - string
              title: url
            package_dimensions:
              description: The dimensions of this product for shipping purposes. A
                SKU associated with this product can override this value by having
                its own `package_dimensions`
              type:
              - object
              title: package_dimensions
            images:
              description: A list of up to 8 URLs of images for this product, meant
                to be displayable to the customer.
              type:
              - array
              - string
              title: images
            deactivate_on:
              description: An array of Connect application names or identifiers that
                should not be able to order the SKUs for this product.
              type:
              - array
              - string
              title: deactivate_on
            attributes:
              description: A list of up to 5 alphanumeric attributes that each SKU
                can provide values for (e.g. `["color", "size"]`). If a value for
                `attributes` is specified, the list specified will replace the existing
                attributes list on this product. Any attributes not present after
                the update will be deleted from the SKUs for this product.
              type:
              - array
              - string
              title: attributes
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/product"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients":
    get:
      description: "<p>Returns a list of your recipients. The recipients are returned
        sorted by creation date, with the most recently created recipients appearing
        first.</p>"
      operationId: AllTransferRecipients
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return recipients that are verified or unverified.
        in: query
        name: verified
        required: false
        type: boolean
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: ''
        in: query
        name: type
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/transfer-recipient"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/recipients
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: TransferRecipientCreate
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            bank_account:
              description: ''
              type:
              - object
              - string
              title: bank_account
            card:
              description: ''
              type:
              - object
              - string
              title: card
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_id:
              description: ''
              type:
              - string
              title: tax_id
            email:
              description: ''
              type:
              - string
              title: email
            type:
              description: ''
              type:
              - string
              title: type
            name:
              description: ''
              type:
              - string
              title: name
          required:
          - type
          - name
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients/{id}":
    delete:
      description: "<p>Permanently deletes a recipient. It cannot be undone.</p>"
      operationId: TransferRecipientDelete
      parameters:
      - description: The identifier of the recipient to be deleted.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing recipient. You need only
        supply the unique recipient identifier that was returned upon recipient creation.</p>"
      operationId: RetrieveTransferRecipient
      parameters:
      - description: The identifier of the recipient to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: TransferRecipientUpdate
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            bank_account:
              description: ''
              type:
              - object
              - string
              title: bank_account
            card:
              description: ''
              type:
              - object
              - string
              title: card
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_id:
              description: ''
              type:
              - string
              title: tax_id
            email:
              description: ''
              type:
              - string
              title: email
            type:
              description: ''
              type:
              - string
              title: type
            name:
              description: ''
              type:
              - string
              title: name
            default_card:
              description: ''
              type:
              - string
              title: default_card
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-recipient"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients/{id}/cards":
    get:
      description: ''
      operationId: AllTransferRecipientCards
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the recipient whose cards will be retrieved
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/recipient-payout-card"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/recipients/:id/cards
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateTransferRecipientCard
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            card:
              description: The card can either be a token, like the ones returned
                by our [Stripe.js](/docs/stripe.js), or a dictionary containing a
                user's credit card details (with the options shown below). Whenever
                you create a new card for a recipient, Stripe will automatically validate
                the card.
              type:
              - object
              - string
              title: card
          required:
          - card
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/recipient-payout-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/recipients/{recipient}/cards/{id}":
    delete:
      description: ''
      operationId: DeleteTransferRecipientCard
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: recipient
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/recipient-payout-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: ''
      operationId: RetrieveTransferRecipientCard
      parameters:
      - description: ID of card to retrieve
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: recipient
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/recipient-payout-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateTransferRecipientCard
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            exp_year:
              description: ''
              type:
              - string
              title: exp_year
            exp_month:
              description: ''
              type:
              - string
              title: exp_month
            name:
              description: ''
              type:
              - string
              title: name
            address_line1:
              description: ''
              type:
              - string
              title: address_line1
            address_line2:
              description: ''
              type:
              - string
              title: address_line2
            address_city:
              description: ''
              type:
              - string
              title: address_city
            address_zip:
              description: ''
              type:
              - string
              title: address_zip
            address_state:
              description: ''
              type:
              - string
              title: address_state
            address_country:
              description: ''
              type:
              - string
              title: address_country
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/recipient-payout-card"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/refunds":
    get:
      description: "<p>Returns a list of all refunds you’ve previously created. The
        refunds are returned in sorted order, with the most recent refunds appearing
        first. For convenience, the 10 most recent refunds are always available by
        default on the charge object.</p>"
      operationId: AllRefunds
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: Only return refunds for the charge specified by this charge ID.
        in: query
        name: charge
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/refund"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/refunds
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateChargeRefund
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            charge:
              description: ''
              type:
              - string
              title: charge
            amount:
              description: ''
              type:
              - integer
              title: amount
            refund_application_fee:
              description: ''
              type:
              - boolean
              title: refund_application_fee
            reason:
              description: ''
              type:
              - string
              title: reason
            reverse_transfer:
              description: ''
              type:
              - boolean
              title: reverse_transfer
            directive:
              description: ''
              type:
              - string
              title: directive
            metadata:
              description: ''
              type:
              - object
              title: metadata
          required:
          - charge
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/refunds/{refund}":
    get:
      description: ''
      operationId: RetrieveRefund
      parameters:
      - description: ''
        in: path
        name: refund
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateRefund
      parameters:
      - description: ''
        in: path
        name: refund
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/refund"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/skus":
    get:
      description: "<p>Returns a list of your SKUs. The SKUs are returned sorted by
        creation date, with the most recently created SKUs appearing first.</p>"
      operationId: AllSKUs
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the product whose SKUs will be retrieved.
        in: query
        name: product
        required: false
        type: string
      - description: Only return SKUs that are active or inactive (e.g. pass `false`
          to list all inactive products).
        in: query
        name: active
        required: false
        type: boolean
      - description: Only return SKUs with the given IDs.
        in: query
        name: ids
        required: false
        type: array
      - description: Only return SKUs that have the specified key/value pairs in this
          partially constructed <translate>dictionary</translate>. Can be specified
          only if `product` is also supplied. For instance, if the associated product
          has attributes `["color", "size"]`, passing in `attributes[color]=red` returns
          all the SKUs for this product that have `color` set to `red`.
        in: query
        name: attributes
        required: false
        type: string
      - description: Only return SKUs that are either in stock or out of stock (e.g.
          pass `false` to list all SKUs that are out of stock). If no value is provided,
          all SKUs are returned.
        in: query
        name: in_stock
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/sku"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/skus
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateSKU
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            id:
              description: The identifier for the SKU. Must be unique. If not provided,
                an identifier will be randomly generated.
              type:
              - string
              title: id
            product:
              description: The ID of the product this SKU is associated with.
              type:
              - string
              title: product
            price:
              description: The cost of the item as a nonnegative integer in the smallest
                currency unit (that is, 100 cents to charge $1.00, or 100 to charge
                ¥100, Japanese Yen being a 0-decimal currency).
              type:
              - integer
              title: price
            currency:
              description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
                for currency.
              type:
              - string
              title: currency
            inventory:
              description: Description of the SKU's inventory.
              type:
              - object
              title: inventory
            attributes:
              description: 'A dictionary of attributes and values for the attributes
                defined by the product. If, for example, a product''s attributes are
                `["size", "gender"]`, a valid SKU has the following dictionary of
                attributes: `{"size": "Medium", "gender": "Unisex"}`.'
              type:
              - object
              title: attributes
            active:
              description: Whether or not the SKU is available for purchase. Default
                to `true`.
              type:
              - boolean
              title: active
            metadata:
              description: A set of key/value pairs that you can attach to a SKU object.
                It can be useful for storing additional information about the SKU
                in a structured format.
              type:
              - object
              title: metadata
            image:
              description: The URL of an image for this SKU, meant to be displayable
                to the customer.
              type:
              - string
              title: image
            package_dimensions:
              description: The dimensions of this SKU for shipping purposes.
              type:
              - object
              title: package_dimensions
          required:
          - product
          - price
          - currency
          - inventory
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/skus/{id}":
    delete:
      description: ''
      operationId: DeleteSKU
      parameters:
      - description: The identifier of the SKU to be deleted
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the details of an existing SKU. Supply the unique
        SKU identifier from either a SKU creation request or from the product, and
        Stripe will return the corresponding SKU information.</p>"
      operationId: RetrieveSKU
      parameters:
      - description: The identifier of the SKU to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateSKU
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: A set of key/value pairs that you can attach to a SKU object.
                It can be useful for storing additional information about the SKU
                in a structured format.
              type:
              - object
              title: metadata
            inventory:
              description: Description of the SKU's inventory.
              type:
              - object
              title: inventory
            attributes:
              description: A dictionary of attributes and values for the attributes
                defined by the product. When specified, `attributes` will partially
                update the existing attributes dictionary on the product, with the
                postcondition that a value must be present for each attribute key
                on the product, and that all SKUs for the product must have unique
                sets of attributes.
              type:
              - object
              title: attributes
            price:
              description: The cost of the item as a positive integer in the smallest
                currency unit (that is, 100 cents to charge $1.00, or 100 to charge
                ¥100, Japanese Yen being a 0-decimal currency).
              type:
              - integer
              title: price
            currency:
              description: 3-letter [ISO code](https://support.stripe.com/questions/which-currencies-does-stripe-support)
                for currency.
              type:
              - string
              title: currency
            active:
              description: Whether or not this SKU is available for purchase.
              type:
              - boolean
              title: active
            package_dimensions:
              description: The dimensions of this SKU for shipping purposes.
              type:
              - object
              title: package_dimensions
            image:
              description: The URL of an image for this SKU, meant to be displayable
                to the customer.
              type:
              - string
              title: image
            product:
              description: The ID of the product that this SKU should belong to. The
                product must exist and have the same set of attribute names as the
                SKU's current product.
              type:
              - string
              title: product
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/sku"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources":
    post:
      description: "<p>Creates a new source object.</p>"
      operationId: CreateSource
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            type:
              description: The `type` of the source to create.
              type:
              - string
              title: type
            flow:
              description: The authentication `flow` of the source to create. `flow`
                is one of `redirect`, `receiver`, `verification`, `none`. It is generally
                inferred unless a type supports multiple flows.
              type:
              - string
              title: flow
            usage:
              description: One of `reusable`, `single-use`. Whether this source should
                be reusable or not. Some source types may or may not be reusable by
                construction, while other may leave the option at creation. If an
                incompatible value is passed, an error will be returned.
              type:
              - string
              title: usage
            amount:
              description: Amount associated with the source. This is the amount for
                which the source will be chargeable once ready. Required for `single-use`
                sources.
              type:
              - integer
              title: amount
            currency:
              description: The currency associated with the source. This is the currency
                for which the source will be chargeable once ready.
              type:
              - string
              title: currency
            owner:
              description: Information about the owner of the payment instrument that
                may be used or required by particular source types.
              type:
              - object
              title: owner
            token:
              description: An optional token used to create the source. When passed,
                token properties will override source parameters.
              type:
              - string
              title: token
            metadata:
              description: A set of key/value pairs that you can attach to a source
                object. It can be useful for storing additional information about
                the source in a structured format.
              type:
              - object
              title: metadata
            redirect:
              description: Parameters required for the redirect flow. Required if
                the source is authenticated by a redirect (`flow` is `redirect`).
              type:
              - object
              title: redirect
          required:
          - type
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}":
    get:
      description: "<p>Retrieve an existing source object. Supply the unique source
        ID from a source creation request and Stripe will return the corresponding
        up-to-date source object information.</p>"
      operationId: RetrieveSource
      parameters:
      - description: The identifier of the source to be retrieved.
        in: path
        name: source
        required: true
        type: string
      - description: The client secret of the source. Required if a publishable key
          is used to retrieve the source.
        in: query
        name: client_secret
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/sources/{source}/verify":
    post:
      description: ''
      operationId: VerifySource
      parameters:
      - description: The ID of the desired source.
        in: path
        name: source
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            values:
              description: The values needed to verify the source
              type:
              - array
              title: values
          required:
          - values
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/source"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscription_items":
    get:
      description: "<p>Returns a list of your subscription items for a given subscription.</p>"
      operationId: AllSubscriptionItems
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the subscription whose items will be retrieved
        in: query
        name: subscription
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/subscription-item"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/subscription_items
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Adds a new item to an existing subscription. No existing items
        will be changed or replaced.</p>"
      operationId: CreateSubscriptionItem
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            subscription:
              description: ''
              type:
              - string
              title: subscription
            plan:
              description: ''
              type:
              - string
              title: plan
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            proration_date:
              description: ''
              type:
              - integer
              title: proration_date
          required:
          - subscription
          - plan
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscription_items/{item}":
    delete:
      description: "<p>Deletes an item from the subscription. Removing an invoice
        item is only possible before the invoice it’s attached to is closed.</p>"
      operationId: DeleteSubscriptionItem
      parameters:
      - description: The ID of the desired subscription item.
        in: path
        name: item
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            proration_date:
              description: ''
              type:
              - integer
              title: proration_date
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    get:
      description: "<p>Retrieves the invoice item with the given ID.</p>"
      operationId: RetrieveSubscriptionItem
      parameters:
      - description: The ID of the desired subscription item.
        in: path
        name: item
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates the plan or quantity of an item on a current subscription.</p>"
      operationId: UpdateSubscriptionItem
      parameters:
      - description: ''
        in: path
        name: item
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            plan:
              description: ''
              type:
              - string
              title: plan
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            proration_date:
              description: ''
              type:
              - integer
              title: proration_date
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription-item"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions":
    get:
      description: "<p>Returns a list of your subscriptions.</p>"
      operationId: AllSubscriptions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the customer whose subscriptions will be retrieved
        in: query
        name: customer
        required: false
        type: string
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: The ID of the plan whose subscriptions will be retrieved
        in: query
        name: plan
        required: false
        type: string
      - description: 'The status of the subscriptions to retrieve. One of: `trialing`,
          `active`, `past_due`, `unpaid`, `canceled`, or `all`. Passing in a value
          of `canceled` will return all canceled subscriptions, including those belonging
          to deleted customers. Passing in a value of `all` will return subscriptions
          of all statuses.'
        in: query
        name: status
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/subscription"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/subscriptions
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateSubscription
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            customer:
              description: ''
              type:
              - string
              title: customer
            plan:
              description: ''
              type:
              - string
              title: plan
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            trial_period_days:
              description: ''
              type:
              - integer
              title: trial_period_days
            trial_end:
              description: ''
              type:
              - integer
              - string
              title: trial_end
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            application_fee_percent:
              description: ''
              type:
              - number
              title: application_fee_percent
            coupon:
              description: ''
              type:
              - string
              title: coupon
            source:
              description: ''
              type:
              - object
              - string
              title: source
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_percent:
              description: ''
              type:
              - number
              title: tax_percent
          required:
          - customer
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions/{subscription_exposed_id}":
    delete:
      description: |-
        <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to true, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. By default, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription. Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at period end, any pending prorations will also be left in place and collected at the end of the period, but if the subscription is set to cancel immediately, pending prorations will be removed.</p>

        <p>By default, all unpaid invoices for the customer will be closed upon subscription cancellation. We do this in order to prevent unexpected payment retries once the customer has canceled a subscription. However, you can reopen the invoices manually after subscription cancellation to have us proceed with automatic retries, or you could even re-attempt payment yourself on all unpaid invoices before allowing the customer to cancel the subscription at all.</p>
      operationId: DeleteCustomerSubscription
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            at_period_end:
              description: A flag that if set to true will delay the cancellation
                of the subscription until the end of the current period.
              type:
              - boolean
              title: at_period_end
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: "<p>Updates an existing subscription on a customer to match the
        specified parameters. When changing plans or quantities, we will optionally
        prorate the price we charge next month to make up for any price changes.</p>"
      operationId: UpdateCustomerSubscription
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            customer:
              description: ''
              type:
              - string
              title: customer
            plan:
              description: ''
              type:
              - string
              title: plan
            prorate:
              description: ''
              type:
              - boolean
              title: prorate
            proration_date:
              description: ''
              type:
              - integer
              title: proration_date
            trial_end:
              description: ''
              type:
              - integer
              - string
              title: trial_end
            quantity:
              description: ''
              type:
              - integer
              title: quantity
            application_fee_percent:
              description: ''
              type:
              - number
              title: application_fee_percent
            source:
              description: ''
              type:
              - object
              - string
              title: source
            coupon:
              description: ''
              type:
              - string
              title: coupon
            metadata:
              description: ''
              type:
              - object
              title: metadata
            tax_percent:
              description: ''
              type:
              - number
              title: tax_percent
          required:
          - customer
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/subscription"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/subscriptions/{subscription_exposed_id}/discount":
    delete:
      description: "<p>Removes the currently applied discount on a customer.</p>"
      operationId: DeleteCustomerDiscount
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/discount"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tokens":
    post:
      description: ''
      operationId: CreateBankAccountToken
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            request_id:
              description: ''
              type:
              - string
              title: request_id
            bank_account:
              description: ''
              type:
              - object
              - string
              title: bank_account
            payment_user_agent:
              description: ''
              type:
              - string
              title: payment_user_agent
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/token"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/tokens/{token}":
    get:
      description: ''
      operationId: RetrieveToken
      parameters:
      - description: The ID of the desired token.
        in: path
        name: token
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/token"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers":
    get:
      description: "<p>Returns a list of existing transfers sent to third-party bank
        accounts or that Stripe has sent you. The transfers are returned in sorted
        order, with the most recently created transfers appearing first.</p>"
      operationId: AllTransfers
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: 'Only return transfers that have the given status: `pending`,
          `paid`, `failed`, `in_transit`, or `canceled`.'
        in: query
        name: status
        required: false
        type: string
      - description: ''
        in: query
        name: date
        required: false
        type: integer
      - description: ''
        in: query
        name: created
        required: false
        type: integer
      - description: Only return transfers for the recipient specified by this recipient
          ID.
        in: query
        name: recipient
        required: false
        type: string
      - description: Only return transfers for the destination specified by this account
          ID.
        in: query
        name: destination
        required: false
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/transfer"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/transfers
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateTransfer
      parameters:
      - description: Body parameters for the request.
        in: body
        name: payload
        required: true
        schema:
          properties:
            recipient:
              description: ''
              type:
              - string
              title: recipient
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
            statement_descriptor:
              description: ''
              type:
              - string
              title: statement_descriptor
            destination:
              description: ''
              type:
              - string
              title: destination
            amount:
              description: ''
              type:
              - integer
              title: amount
            currency:
              description: ''
              type:
              - string
              title: currency
            card:
              description: ''
              type:
              - string
              title: card
            bank_account:
              description: ''
              type:
              - string
              title: bank_account
            source_transaction:
              description: ''
              type:
              - string
              title: source_transaction
            application_fee:
              description: ''
              type:
              - integer
              title: application_fee
            destination_application_fee:
              description: ''
              type:
              - integer
              title: destination_application_fee
            source_type:
              description: ''
              type:
              - string
              title: source_type
            method:
              description: ''
              type:
              - string
              title: method
          required:
          - amount
          - currency
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{id}":
    get:
      description: "<p>Retrieves the details of an existing transfer. Supply the unique
        transfer ID from either a transfer creation request or the transfer list,
        and Stripe will return the corresponding transfer information.</p>"
      operationId: RetrieveTransfer
      parameters:
      - description: The identifier of the transfer to be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateTransfer
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            description:
              description: ''
              type:
              - string
              title: description
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{id}/cancel":
    post:
      description: ''
      operationId: ReverseNonStripeTransferOnSlashCancel
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{id}/reversals":
    get:
      description: "<p>You can see a list of the reversals belonging to a specific
        transfer. Note that the 10 most recent reversals are always available by default
        on the transfer object. If you need more than those 10, you can use this API
        method and the <code>limit</code> and <code>starting_after</code> parameters
        to page through additional reversals.</p>"
      operationId: AllTransferReversals
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: The ID of the transfer whose reversals will be retrieved.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/transfer-reversal"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/transfers/:id/reversals
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: CreateStripeAccountTransferReversal
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            amount:
              description: ''
              type:
              - integer
              title: amount
            refund_application_fee:
              description: ''
              type:
              - boolean
              title: refund_application_fee
            metadata:
              description: ''
              type:
              - object
              title: metadata
            description:
              description: ''
              type:
              - string
              title: description
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{id}/transactions":
    get:
      description: ''
      operationId: AllTransferTransactions
      parameters:
      - description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100 items.
        in: query
        name: limit
        required: false
        type: integer
      - description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list.
        in: query
        name: starting_after
        required: false
        type: string
      - description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        in: query
        name: ending_before
        required: false
        type: string
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: query
        name: old_api_style
        required: false
        type: boolean
      responses:
        '200':
          description: Successful response.
          schema:
            properties:
              has_more:
                example: false
                type:
                - boolean
              data:
                items:
                  "$ref": "#/definitions/transfer-transaction"
                type:
                - array
              url:
                example: http://127.0.0.1:15003/v1/transfers/:id/transactions
                type:
                - string
            type:
            - object
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
  "/v1/transfers/{transfer}/reversals/{id}":
    get:
      description: ''
      operationId: RetrieveTransferReversal
      parameters:
      - description: ''
        in: path
        name: transfer
        required: true
        type: string
      - description: ''
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
    post:
      description: ''
      operationId: UpdateTransferReversal
      parameters:
      - description: ''
        in: path
        name: id
        required: true
        type: string
      - description: ''
        in: path
        name: transfer
        required: true
        type: string
      - description: Body parameters for the request.
        in: body
        name: payload
        required: false
        schema:
          properties:
            metadata:
              description: ''
              type:
              - object
              title: metadata
      responses:
        '200':
          description: Successful response.
          schema:
            "$ref": "#/definitions/transfer-reversal"
        default:
          description: Error response.
          schema:
            "$ref": "#/definitions/error"
produces:
- application/json
schemes:
- https
swagger: '2.0'
